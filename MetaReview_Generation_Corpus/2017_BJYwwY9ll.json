{"year": "2017", "forum": "BJYwwY9ll", "title": "Snapshot Ensembles: Train 1, Get M for Free", "decision": "Accept (Poster)", "meta_review": "Significant problem, interesting and simple solution, broad evaluation, authors highly responsive in incorporating feedback, all reviewers recommend acceptance. I agree.", "reviews": [{"review_id": "BJYwwY9ll-0", "review_text": "This work develops a method to quickly produce an ensemble of deep networks that outperform a single network trained for an equivalent amount of time. The basis of this approach is to use a cyclic learning rate to quickly settle the model into a local minima and saving a model snapshot at this time before quickly raising the learning rate to escape towards a different minima's well of attraction. The resulting snapshots can be collected throughout a single training run and achieve reasonable performance compared to baselines and have some of the gains of traditional ensembles (at a much lower cost). This paper is well written, has clear and informative figures/tables, and provides convincing results across a broad range of models and datasets. I especially liked the analysis in Section 4.4. The publicly available code to ensure reproducibility is also greatly appreciated. I would like to see more discussion of the accuracy and variability of each snapshot and further comparison with true ensembles. Preliminary rating: This is an interesting work with convincing experiments and clear writing. Minor note: Why is the axis for lambda from -1 to 2 in Figure 5 where lambda is naturally between 0 and 1.", "rating": "9: Top 15% of accepted papers, strong accept", "reply_text": "Thanks for the positive comments . We will provide more detailed analysis about the individual model snapshots , and more comparisons with true ensembles in the final version . We agree that for lambda the most interesting values are between 0 and 1 . We will update the figures in the final version ."}, {"review_id": "BJYwwY9ll-1", "review_text": "I don't have much to add to my pre-review questions. The main thing I'd like to see that would strengthen my review further is a larger scale evaluation, more discussion of the hyperparameters, etc. Where test error are reported for snapshot ensembles it would be useful to report statistics about the performance of individual ensemble members for comparison (mean and standard deviation, maybe best single member's error rate).", "rating": "7: Good paper, accept", "reply_text": "Thanks for the suggestions . We will include statistics about the individual ensemble members , and evaluate our method on a larger data set , e.g. , ImageNet ."}, {"review_id": "BJYwwY9ll-2", "review_text": "The work presented in this paper proposes a method to get an ensemble of neural networks at no extra training cost (i.e., at the cost of training a single network), by saving snapshots of the network during training. Network is trained using a cyclic (cosine) learning rate schedule; the snapshots are obtained when the learning rate is at the lowest points of the cycles. Using these snapshot ensembles, they show gains in performance over a single network on the image classification task on a variety of datasets. Positives: 1. The work should be easy to adopt and re-produce, given the simple techinque and the experimental details in the paper. 2. Well written paper, with clear description of the method and thorough experiments. Suggestions for improvement / other comments: 1. While it is fair to compare against other techniques assuming a fixed computational budget, for a clear perspective, thorough comaprisons with \"true ensembles\" (i.e., ensembles of networks trained independently) should be provided. Specificially, Table 4 should be augmented with results from \"true ensembles\". 2. Comparison with true ensembles is only provided for DenseNet-40 on CIFAR100 in Figure 4. The proposed snapshot ensemble achieves approximately 66% of the improvement of \"true ensemble\" over the single baseline model. This is not reflected accurately in the authors' claim in the abstract: \"[snapshot ensembles] **almost match[es]** the results of far more expensive independently trained [true ensembles].\" 3. As mentioned before: to understand the diversity of snapshot ensembles, it would help to the diversity against different ensembling technique, e.g. (1) \"true ensembles\", (2) ensembles from dropout as described by Gal et. al, 2016 (Dropout as a Bayesian Approximation).", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "Thanks for the detailed suggestions . 1.We agree that \u201c true ensemble \u201d results are important as they can be viewed as a lower bound of the test error given by Snapshot Ensemble . We \u2019 ll include more of those in the final version . 2.Thanks for pointing out this . We will fix it in the revision . 3.Thanks , we will add those comparisons ."}], "0": {"review_id": "BJYwwY9ll-0", "review_text": "This work develops a method to quickly produce an ensemble of deep networks that outperform a single network trained for an equivalent amount of time. The basis of this approach is to use a cyclic learning rate to quickly settle the model into a local minima and saving a model snapshot at this time before quickly raising the learning rate to escape towards a different minima's well of attraction. The resulting snapshots can be collected throughout a single training run and achieve reasonable performance compared to baselines and have some of the gains of traditional ensembles (at a much lower cost). This paper is well written, has clear and informative figures/tables, and provides convincing results across a broad range of models and datasets. I especially liked the analysis in Section 4.4. The publicly available code to ensure reproducibility is also greatly appreciated. I would like to see more discussion of the accuracy and variability of each snapshot and further comparison with true ensembles. Preliminary rating: This is an interesting work with convincing experiments and clear writing. Minor note: Why is the axis for lambda from -1 to 2 in Figure 5 where lambda is naturally between 0 and 1.", "rating": "9: Top 15% of accepted papers, strong accept", "reply_text": "Thanks for the positive comments . We will provide more detailed analysis about the individual model snapshots , and more comparisons with true ensembles in the final version . We agree that for lambda the most interesting values are between 0 and 1 . We will update the figures in the final version ."}, "1": {"review_id": "BJYwwY9ll-1", "review_text": "I don't have much to add to my pre-review questions. The main thing I'd like to see that would strengthen my review further is a larger scale evaluation, more discussion of the hyperparameters, etc. Where test error are reported for snapshot ensembles it would be useful to report statistics about the performance of individual ensemble members for comparison (mean and standard deviation, maybe best single member's error rate).", "rating": "7: Good paper, accept", "reply_text": "Thanks for the suggestions . We will include statistics about the individual ensemble members , and evaluate our method on a larger data set , e.g. , ImageNet ."}, "2": {"review_id": "BJYwwY9ll-2", "review_text": "The work presented in this paper proposes a method to get an ensemble of neural networks at no extra training cost (i.e., at the cost of training a single network), by saving snapshots of the network during training. Network is trained using a cyclic (cosine) learning rate schedule; the snapshots are obtained when the learning rate is at the lowest points of the cycles. Using these snapshot ensembles, they show gains in performance over a single network on the image classification task on a variety of datasets. Positives: 1. The work should be easy to adopt and re-produce, given the simple techinque and the experimental details in the paper. 2. Well written paper, with clear description of the method and thorough experiments. Suggestions for improvement / other comments: 1. While it is fair to compare against other techniques assuming a fixed computational budget, for a clear perspective, thorough comaprisons with \"true ensembles\" (i.e., ensembles of networks trained independently) should be provided. Specificially, Table 4 should be augmented with results from \"true ensembles\". 2. Comparison with true ensembles is only provided for DenseNet-40 on CIFAR100 in Figure 4. The proposed snapshot ensemble achieves approximately 66% of the improvement of \"true ensemble\" over the single baseline model. This is not reflected accurately in the authors' claim in the abstract: \"[snapshot ensembles] **almost match[es]** the results of far more expensive independently trained [true ensembles].\" 3. As mentioned before: to understand the diversity of snapshot ensembles, it would help to the diversity against different ensembling technique, e.g. (1) \"true ensembles\", (2) ensembles from dropout as described by Gal et. al, 2016 (Dropout as a Bayesian Approximation).", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "Thanks for the detailed suggestions . 1.We agree that \u201c true ensemble \u201d results are important as they can be viewed as a lower bound of the test error given by Snapshot Ensemble . We \u2019 ll include more of those in the final version . 2.Thanks for pointing out this . We will fix it in the revision . 3.Thanks , we will add those comparisons ."}}