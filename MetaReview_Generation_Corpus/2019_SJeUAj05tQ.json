{"year": "2019", "forum": "SJeUAj05tQ", "title": "DADAM: A consensus-based distributed adaptive gradient method for online optimization", "decision": "Reject", "meta_review": "The paper provides a distributed optimization method, applicable to decentralized computation while retaining provable guarantees.  This was a borderline paper and a difficult decision.\n\nThe proposed algorithm is straightforward (a compliment), showing how adaptive optimization algorithms can still be coordinated in a distributed fashion.  The theoretical analysis is interesting, but additional assumptions about the mixing are needed to reach clear conclusions: for example, additional assumptions are required to demonstrate potential advantages over non-distributed adaptive optimization algorithms.\n\nThe initial version of the paper was unfortunately sloppy, with numerous typographical errors.  More importantly, some key relevant literature was not cited:\n- Duchi, John C., Alekh Agarwal, and Martin J. Wainwright. \"Dual averaging for distributed optimization: Convergence analysis and network scaling.\" IEEE Transactions on Automatic control 57.3 (2012): 592-606.\nIn addition to citing this work, this and the other related works need to be discussed in relation to the proposed approach earlier in the paper, as suggested by Reviewer 3.\n\nThere was disagreement between the reviewers in the assessment of this paper.  Generally the dissenting reviewer produced the highest quality assessment.  This paper is on the borderline, however given the criticisms raised it would benefit from additional theoretical strengthening, improved experimental reporting, and better framing with respect to the existing literature.", "reviews": [{"review_id": "SJeUAj05tQ-0", "review_text": "The proposed DADAM is a sophisticated combination of decentralized optimization and the adaptive moment estimation. DADAM enables data parallelization as well as decentralized computation, hence suitable for large scale machine learning problems. Corollary 10 shows better performance of DADAM. Besides the detailed derivations, can the authors intuitively explain the key setup which leads to this better performance? The experimental results are mainly based on sigmoid loss with simple constraints. The results will be more convincing if the authors can provide studies on more complex objective, for example, regularized loss with both L2 and L1 bounded constraints. Th experimental results in Section 5.1 is based on \\beta_1 = \\beta_2 = \\beta_3 = 0.9. From the expression of \\hat v_{i,t} in Section 2, this setting implies the most recent v_{i,t} plays a more important role than the historical maximum, hence ADAM is better than AMSGrad. I am curious what the results will look like if we set \\beta_3 as a value smaller than 0.5. ", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "We thank the reviewer for the helpful and supportive feedback . A detailed point-by-point response to the reviewer 's comments follows . 1-1 [ Comment ] -- Corollary 10 shows better performance of DADAM . Besides the detailed derivations , can the authors intuitively explain the key setup which leads to this better performance ? 1-1 [ Response ] The key setup which leads to this regret bound is that we do not use the boundedness assumption for domain or gradient . These assumptions may simplify the proof but lose some sophisticated structures in the distributed optimization problems . Further , the advantage of DADAM over centralized parallel gradient methods is to avoid the communication traffic jam . More specifically , the communication cost for each node of DADAM is O ( the degree of the graph ) which could be much smaller than $ O ( n ) $ for centralized gradient-based methods . Refer to Paragraph~2 on page 8 . 1-2 [ Comment ] -- The experimental results are mainly based on sigmoid loss with simple constraints . The results will be more convincing if the authors can provide studies on more complex objective , for example , regularized loss with both L2 and L1 bounded constraints . 1-2 [ Response ] -- We have provided a detailed implementation for different choices of regularized loss with both L2 and L1 bounded constraints . Refer to Equation ~18 on page 9 . Refer to Figure~1 on page 10 . 1-3 [ Comment ] -- Th experimental results in Section 5.1 is based on \\beta_1 = \\beta_2 = \\beta_3 = 0.9 . From the expression of \\hat v_ { i , t } in Section 2 , this setting implies the most recent v_ { i , t } plays a more important role than the historical maximum , hence ADAM is better than AMSGrad . I am curious what the results will look like if we set \\beta_3 as a value smaller than 0.5 . 1-3 [ Response ] -- In Appendix , we examine the sensitivity of DADAM on the parameters related to the network connection and update of the moment estimate . We consider a range of hyperparameter choices , i.e. $ \\beta_3 \\in { 0,0.9,0.99 } $ . From Figure 4 it can be easily seen that DADAM performs equal or better than AMSGrad $ ( \\beta_3 = 0 ) $ , regardless of the hyper-parameter setting for $ \\beta_1 $ and $ \\beta_2 $ . Refer to Figures~3 and 4 on page 29 ."}, {"review_id": "SJeUAj05tQ-1", "review_text": "This paper presents a consensus-based decentralized version of the Adam algorithm for online optimization. The authors consider an empirical risk minimization objective, which they split into different components, and propose running a separate online optimization algorithm for each component, with a consensus synchronization step that involves taking a linear combination of the parameters from each component before applying each component's individual parameter update. The final output is a simple average of the parameters from each component. The authors study the important problem of distributed optimization and focus on adapting existing state-of-the-art methods to this setting. The algorithm is clearly presented, and to the best of my knowledge, original. The fact that this work includes both theoretical guarantees for the convex and non-convex settings as well as numerical experiments strengthens the contribution. On the other hand, I didn't find the actual method presented by the authors to be motivated very well. The main innovation with respect to the standard Adam/AMSGrad algorithm is the use of a mixing matrix W, but the authors do not discuss how the choice of this matrix influences the performance of the algorithm or how one should specify this input in practice. This seems like an important issue, especially since all of the bounds depend on the second singular value of this matrix. Moreover, arguments such as Corollary 10 do not actually imply that DADAM outperforms ADAM when this singular value is large, making it difficult to assess the impact of this work. The numerical experiments also do not test for the statistical significance of the results. There are also many typos that make the submission seem relatively unpolished. Specific comments: 1. page 1: \"note only\". Typo. 2. page 2: \"decentalized\". Typo. 3. page 2: \"\\Pi_X[x]. If \\Pi_X(x)....\" Inconsistent notation. 4. page 3: \"largest singular of matrix\". Typo. 5. page 3: \"x_t* = arg min_{x \\in X} f_t(x)\". f_t isn't defined in up to this point. 6. page 4: \"network cost is then given by f_t(x) = \\frac{1}{n} \\sum_{i=1}^n f_{i,t}(x)\" Should the cost be \\frac{1}{n} \\sum_{i=1}^n f_{i,t}(x_{i,t})? That would be more consistent with the definition of regret presented in Reg_T^C. 7. page 4: \"assdessed\". Typo. 8. page 4: \" Reg_T^C := \\frac{1}{n} \\sum_{i=1}^n \\sum)_{t=1}^T f_t(x_{i,t})...\" Why is this f_t and not f_{i,t}? 9. page 4: \"\\hat{v}_{i,t} = v_3 ...\" You should reference how this assignment in the algorithm relates to the AMSGrad algorithm. Moreover, you should explain why you chose to use a convex combination in the assignment instead of just the max. 10. page 5: Definition 1. This calculation should be derived and presented somewhere (e.g. in the appendix). 11. page 5: Assumption 3. The notation for the stochastic gradient is not very clear and easily distinguishable from the notation for the deterministic gradient. 12. page 5: Theorem 4. D_T can be very large in the bound, which would make the upper bound meaningless. Can you set hyperparameters in such a way to minimize it? Also, what is the typical size of \\sigma_2(W) that one would incur? 13. page 6: Remark 6. This remark seems misleading. It ignores the log(T) and D_T terms, both of which may dominate the data dependent arguments. 14. page 6: \"The update rules \\tilde{v}_{i,t}...\". \\tilde{v}_{i,t} is introduced but never defined. 15. page 6: Last display equation. The first inequality seems like it can be an equality. 16. page 7: Equation (14). Doesn't the presence of \\sigma_2(W) imply that the O(1/T) term may not be negligible? It would also be helpful to give some examples of how large T needs to be in (15a) and (15b) in order for this statement to take effect. 17. page8: \"distributed federated averaging SGD (FedAvg)\". What is the reference for this? It should be included here. It should probably also be mentioned in the introduction as related work. 18. page 9: Figure 1. Without error bars, it is impossible to tell the statistical significance of these results. Moreover, how sensitive are these results to different choices of hyperparameters? 19. page 9: \"obtain p coefficients\". What is p in these experiments? 20. page 9: Metropolis constant edge weight matrix W\". What is \\sigma_2(W) in this case? 21. page 10: Acknowledgements. This shouldn't be included in the submission. ", "rating": "4: Ok but not good enough - rejection", "reply_text": "1-4 [ Comment ] -- 1. page 1 : `` note only '' . Typo. -- 2 . page 2 : `` decentalized '' . Typo .... -- 21. page 10 : Acknowledgements . This should n't be included in the submission . 1-4 [ Response ] Modified and fixed . 1-5 [ Comment ] 9. page 4 : `` $ \\hat { v } _ { i , t } = v_3 ... $ '' You should reference how this assignment in the algorithm relates to the AMSGrad algorithm . Moreover , you should explain why you chose to use a convex combination in the assignment instead of just the max . 1-5 [ Response ] -- In some cases , the numerical performance of our experiments is dependent on the choice of parameter $ \\hat { v } _ { i , t } $ and the results provided establish the efficiency of ADAM in comparison to AMSGrad . Indeed , a good step size value generated in any iterate of ADAM is essentially discarded due to the max in AMSGrad . $ \\hat { v } _ { i , t } $ provides a combination of these two approaches and enables us to develop a convergent adaptive method similar to AMSGrad , while maintaining the efficiency of ADAM . Refer to Subsection 2 on page 4 . 1-6 [ Comment ] 12. page 5 : Theorem 4 . $ D_T $ can be very large in the bound , which would make the upper bound meaningless . Can you set hyperparameters in such a way to minimize it ? Also , what is the typical size of $ \\sigma_2 ( W ) $ that one would incur ? 13. page 6 : Remark 6 . This remark seems misleading . It ignores the $ \\log ( T ) $ and $ D_T $ terms , both of which may dominate the data dependent arguments . 1-6 [ Response ] -- It is easy to show that the regret of DADAM is bounded by $ O ( G_\\infty D_T \\sqrt { T } ) $ where $ D_T =\\max_ { d \\in \\ { 1 , ... , p\\ } } D_ { T , d } $ . Indeed , the term $ \\sum_ { t=1 } ^T |g_ { i , t , d } |/\\sqrt { t } $ in the proof of Lemma~13 can be bounded by $ O ( G_\\infty \\sqrt { T } ) $ instead of $ O ( G_\\infty \\sqrt { T\\log { T } } ) $ . Hence , the regret of DADAM is upper bounded by minimum of $ O ( G_\\infty D_T \\sqrt { T } ) $ and the bound presented in Theorems~4 and 5 , and thus the worst case dependence on $ T $ is $ \\sqrt { T } $ rather than $ \\sqrt { T \\log { T } } $ . It is worth mentioning that in the static setting , i.e. $ D_T=0 $ , the regret of DADAM is upper bounded by $ O ( G_\\infty \\sqrt { T } ) $ . Refer to Remark 6 on page 6 . 1-7 [ Comment ] 16. page 7 : Equation ( 14 ) . Does n't the presence of $ \\sigma_2 ( W ) $ imply that the $ O ( 1/T ) $ term may not be negligible ? It would also be helpful to give some examples of how large T needs to be in ( 15a ) and ( 15b ) in order for this statement to take effect . 1-7 [ Response ] Please see Response 1-3 . 1-8 [ Comment ] 18. page 9 : Figure 1 . Without error bars , it is impossible to tell the statistical significance of these results . Moreover , how sensitive are these results to different choices of hyperparameters ? 1-8 [ Response ] -- The numerical results shown in Figure~1 are based on the deterministic variants of DADAM , DGD and EXTRA algorithms with only local computation and neighbor communication . Indeed , our goal is to show the exact convergence to the reference logistic classifier $ \\theta^ * $ . Hence , error bars are provided based on the residual $ \\|\\frac { \\theta_T- \\theta^ * } { \\theta - \\theta^ * } \\| $ . We have provided a detailed implementation for different choices of hyperparameters in Appendix . Refer to Figure~1 on page 10 . Refer to Figures~3 and 4 on page 29 ."}, {"review_id": "SJeUAj05tQ-2", "review_text": "Title: DADAM: A consensus-based distributed adaptive gradient method for online optimization Summary: The paper presented DADAM, a new consensus-based distributed adaptive moment estimation method, for online optimization. The author(s) also provide the convergence analysis and dynamic regret bound. The experiments show good performance of DADAM comparing to other methods. Comments: 1) The theoretical results are nice and indeed non-trivial. However, could you please explain the implication to equation (7a)? Does it have absolute value on the LHS? 2) Can you explain more clearly about the section 3.2.1? It is not clear to me why DADAM outperform ADAM here. 3) Did you perform algorithms on many runs and take the average? Also, did you tune the learning rate for all other algorithms to be the best performance? I am not sure how you choose the parameter \\alpha here. What if \\alpha changes and do not base on that in Yuan et al. 2016? 4) The deep learning experiments are quite simple. In order to validate the performance of the algorithm, it needs to be run on more datasets and networks architectures. MNIST and CIFAR-10 and these simple network architectures are quite standard. I would suggest to provide more if the author(s) have time. In general, I like this paper. I would love to have discussions with the author(s) during the rebuttal period. ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for very helpful and constructive feedback . A detailed point-by-point response to the reviewer 's comments follows . 1-1 [ Comment ] -- Could you please explain the implication to equation ( 7a ) ? Does it have absolute value on the LHS ? 1-1 [ Response ] -- Modified and Fixed . 1-2 [ Comment ] -- Can you explain more clearly about the section 3.2.1 ? It is not clear to me why DADAM outperform ADAM here . 1-2 [ Response ] -- In this section , we address the question of whether DADAM be faster than ADAM ( which is a centralized adaptive algorithm ) ? We provide the analysis for the convergence rate of the stochastic DADAM in the non-convex setting and show that the convergence rate of DADAM w.r.t time steps is similar to the mini-batch SGD , mini-batch ADAM , centralized parallel ADAM and parallel stochastic gradient descent , but DADAM avoids the communication traffic jam due to its locally distributed nature . - In the context of stochastic nonconvex optimization , we say a gradient-based method gives an $ \\epsilon $ -approximation solution if $ $ T^ { -1 } \\e { { \\bf Reg } ^N_T } \\leq \\epsilon $ $ where $ { \\bf Reg } ^N_T $ is defined in Section~2 ( please see Definition~2 ) . Now , assume that $ T $ is sufficiently large , it satisfies ( 16a ) and ( 16b ) , the $ \\frac { 1 } { T } $ term will be dominated by the $ \\frac { 1 } { \\sqrt { nT } } $ term which leads to a $ \\frac { 1 } { \\sqrt { nT } } $ convergence rate . More specifically , it shows that the computation complexity of DADAM to achieve $ \\epsilon $ -approximation solution is $ O ( 1/\\epsilon^2 ) $ . It is worth to mention that the computational complexity per iteration of DADAM is $ O ( n ) $ since the computation of a single stochastic gradient counts 1 . Further , since the total number of nodes does not affect the complexity , each node exhibits complexity of $ O\\big ( 1/ ( n\\epsilon^2 ) \\big ) $ . In summary , a linear speed up can be achieved by DADAM w.r.t computational complexity if $ T $ is sufficiently large . Refer to Subsection~3.2.1 on page 8 . 1-3 [ Comment ] Did you perform algorithms on many runs and take the average ? Also , did you tune the learning rate for all other algorithms to be the best performance ? I am not sure how you choose the parameter $ \\alpha $ here . What if $ \\alpha $ changes and do not base on that in Yuan et al.2016 ? 1-3 [ Response ] -- The experiment is repeated ten times and the average residuals are considered for comparison purposes . -- In [ 16KLY ] and [ 18JY ] , fast ergodic convergence rate of DGD was established assuming $ T $ is sufficiently large and the step sizes are $ \\alpha= \\frac { 1+ \\sigma_n } { \\rho } $ and $ \\alpha= \\frac { \\sigma_n } { \\rho } $ for convex and nonconvex objectives , respectively . Our numerical results show efficiency of adaptive algorithms by choosing these parameters . It is worth to mention that recommended $ alpha $ for adaptive gradient methods such as ADAM is equal to $ 0.001 $ but this is not optimal for decentralized gradient methods . [ 18JY ] Zeng Jinshan , and Wotao Yin . `` On nonconvex decentralized gradient descent . '' IEEE Transactions on Signal Processing 66.11 ( 2018 ) : 2834-2848 . [ 16KLY ] Yuan , Kun , Qing Ling , and Wotao Yin . `` On the convergence of decentralized gradient descent . '' SIAM Journal on Optimization 26.3 ( 2016 ) : 1835-1854 . Refer to Appendix on page 29 ."}], "0": {"review_id": "SJeUAj05tQ-0", "review_text": "The proposed DADAM is a sophisticated combination of decentralized optimization and the adaptive moment estimation. DADAM enables data parallelization as well as decentralized computation, hence suitable for large scale machine learning problems. Corollary 10 shows better performance of DADAM. Besides the detailed derivations, can the authors intuitively explain the key setup which leads to this better performance? The experimental results are mainly based on sigmoid loss with simple constraints. The results will be more convincing if the authors can provide studies on more complex objective, for example, regularized loss with both L2 and L1 bounded constraints. Th experimental results in Section 5.1 is based on \\beta_1 = \\beta_2 = \\beta_3 = 0.9. From the expression of \\hat v_{i,t} in Section 2, this setting implies the most recent v_{i,t} plays a more important role than the historical maximum, hence ADAM is better than AMSGrad. I am curious what the results will look like if we set \\beta_3 as a value smaller than 0.5. ", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "We thank the reviewer for the helpful and supportive feedback . A detailed point-by-point response to the reviewer 's comments follows . 1-1 [ Comment ] -- Corollary 10 shows better performance of DADAM . Besides the detailed derivations , can the authors intuitively explain the key setup which leads to this better performance ? 1-1 [ Response ] The key setup which leads to this regret bound is that we do not use the boundedness assumption for domain or gradient . These assumptions may simplify the proof but lose some sophisticated structures in the distributed optimization problems . Further , the advantage of DADAM over centralized parallel gradient methods is to avoid the communication traffic jam . More specifically , the communication cost for each node of DADAM is O ( the degree of the graph ) which could be much smaller than $ O ( n ) $ for centralized gradient-based methods . Refer to Paragraph~2 on page 8 . 1-2 [ Comment ] -- The experimental results are mainly based on sigmoid loss with simple constraints . The results will be more convincing if the authors can provide studies on more complex objective , for example , regularized loss with both L2 and L1 bounded constraints . 1-2 [ Response ] -- We have provided a detailed implementation for different choices of regularized loss with both L2 and L1 bounded constraints . Refer to Equation ~18 on page 9 . Refer to Figure~1 on page 10 . 1-3 [ Comment ] -- Th experimental results in Section 5.1 is based on \\beta_1 = \\beta_2 = \\beta_3 = 0.9 . From the expression of \\hat v_ { i , t } in Section 2 , this setting implies the most recent v_ { i , t } plays a more important role than the historical maximum , hence ADAM is better than AMSGrad . I am curious what the results will look like if we set \\beta_3 as a value smaller than 0.5 . 1-3 [ Response ] -- In Appendix , we examine the sensitivity of DADAM on the parameters related to the network connection and update of the moment estimate . We consider a range of hyperparameter choices , i.e. $ \\beta_3 \\in { 0,0.9,0.99 } $ . From Figure 4 it can be easily seen that DADAM performs equal or better than AMSGrad $ ( \\beta_3 = 0 ) $ , regardless of the hyper-parameter setting for $ \\beta_1 $ and $ \\beta_2 $ . Refer to Figures~3 and 4 on page 29 ."}, "1": {"review_id": "SJeUAj05tQ-1", "review_text": "This paper presents a consensus-based decentralized version of the Adam algorithm for online optimization. The authors consider an empirical risk minimization objective, which they split into different components, and propose running a separate online optimization algorithm for each component, with a consensus synchronization step that involves taking a linear combination of the parameters from each component before applying each component's individual parameter update. The final output is a simple average of the parameters from each component. The authors study the important problem of distributed optimization and focus on adapting existing state-of-the-art methods to this setting. The algorithm is clearly presented, and to the best of my knowledge, original. The fact that this work includes both theoretical guarantees for the convex and non-convex settings as well as numerical experiments strengthens the contribution. On the other hand, I didn't find the actual method presented by the authors to be motivated very well. The main innovation with respect to the standard Adam/AMSGrad algorithm is the use of a mixing matrix W, but the authors do not discuss how the choice of this matrix influences the performance of the algorithm or how one should specify this input in practice. This seems like an important issue, especially since all of the bounds depend on the second singular value of this matrix. Moreover, arguments such as Corollary 10 do not actually imply that DADAM outperforms ADAM when this singular value is large, making it difficult to assess the impact of this work. The numerical experiments also do not test for the statistical significance of the results. There are also many typos that make the submission seem relatively unpolished. Specific comments: 1. page 1: \"note only\". Typo. 2. page 2: \"decentalized\". Typo. 3. page 2: \"\\Pi_X[x]. If \\Pi_X(x)....\" Inconsistent notation. 4. page 3: \"largest singular of matrix\". Typo. 5. page 3: \"x_t* = arg min_{x \\in X} f_t(x)\". f_t isn't defined in up to this point. 6. page 4: \"network cost is then given by f_t(x) = \\frac{1}{n} \\sum_{i=1}^n f_{i,t}(x)\" Should the cost be \\frac{1}{n} \\sum_{i=1}^n f_{i,t}(x_{i,t})? That would be more consistent with the definition of regret presented in Reg_T^C. 7. page 4: \"assdessed\". Typo. 8. page 4: \" Reg_T^C := \\frac{1}{n} \\sum_{i=1}^n \\sum)_{t=1}^T f_t(x_{i,t})...\" Why is this f_t and not f_{i,t}? 9. page 4: \"\\hat{v}_{i,t} = v_3 ...\" You should reference how this assignment in the algorithm relates to the AMSGrad algorithm. Moreover, you should explain why you chose to use a convex combination in the assignment instead of just the max. 10. page 5: Definition 1. This calculation should be derived and presented somewhere (e.g. in the appendix). 11. page 5: Assumption 3. The notation for the stochastic gradient is not very clear and easily distinguishable from the notation for the deterministic gradient. 12. page 5: Theorem 4. D_T can be very large in the bound, which would make the upper bound meaningless. Can you set hyperparameters in such a way to minimize it? Also, what is the typical size of \\sigma_2(W) that one would incur? 13. page 6: Remark 6. This remark seems misleading. It ignores the log(T) and D_T terms, both of which may dominate the data dependent arguments. 14. page 6: \"The update rules \\tilde{v}_{i,t}...\". \\tilde{v}_{i,t} is introduced but never defined. 15. page 6: Last display equation. The first inequality seems like it can be an equality. 16. page 7: Equation (14). Doesn't the presence of \\sigma_2(W) imply that the O(1/T) term may not be negligible? It would also be helpful to give some examples of how large T needs to be in (15a) and (15b) in order for this statement to take effect. 17. page8: \"distributed federated averaging SGD (FedAvg)\". What is the reference for this? It should be included here. It should probably also be mentioned in the introduction as related work. 18. page 9: Figure 1. Without error bars, it is impossible to tell the statistical significance of these results. Moreover, how sensitive are these results to different choices of hyperparameters? 19. page 9: \"obtain p coefficients\". What is p in these experiments? 20. page 9: Metropolis constant edge weight matrix W\". What is \\sigma_2(W) in this case? 21. page 10: Acknowledgements. This shouldn't be included in the submission. ", "rating": "4: Ok but not good enough - rejection", "reply_text": "1-4 [ Comment ] -- 1. page 1 : `` note only '' . Typo. -- 2 . page 2 : `` decentalized '' . Typo .... -- 21. page 10 : Acknowledgements . This should n't be included in the submission . 1-4 [ Response ] Modified and fixed . 1-5 [ Comment ] 9. page 4 : `` $ \\hat { v } _ { i , t } = v_3 ... $ '' You should reference how this assignment in the algorithm relates to the AMSGrad algorithm . Moreover , you should explain why you chose to use a convex combination in the assignment instead of just the max . 1-5 [ Response ] -- In some cases , the numerical performance of our experiments is dependent on the choice of parameter $ \\hat { v } _ { i , t } $ and the results provided establish the efficiency of ADAM in comparison to AMSGrad . Indeed , a good step size value generated in any iterate of ADAM is essentially discarded due to the max in AMSGrad . $ \\hat { v } _ { i , t } $ provides a combination of these two approaches and enables us to develop a convergent adaptive method similar to AMSGrad , while maintaining the efficiency of ADAM . Refer to Subsection 2 on page 4 . 1-6 [ Comment ] 12. page 5 : Theorem 4 . $ D_T $ can be very large in the bound , which would make the upper bound meaningless . Can you set hyperparameters in such a way to minimize it ? Also , what is the typical size of $ \\sigma_2 ( W ) $ that one would incur ? 13. page 6 : Remark 6 . This remark seems misleading . It ignores the $ \\log ( T ) $ and $ D_T $ terms , both of which may dominate the data dependent arguments . 1-6 [ Response ] -- It is easy to show that the regret of DADAM is bounded by $ O ( G_\\infty D_T \\sqrt { T } ) $ where $ D_T =\\max_ { d \\in \\ { 1 , ... , p\\ } } D_ { T , d } $ . Indeed , the term $ \\sum_ { t=1 } ^T |g_ { i , t , d } |/\\sqrt { t } $ in the proof of Lemma~13 can be bounded by $ O ( G_\\infty \\sqrt { T } ) $ instead of $ O ( G_\\infty \\sqrt { T\\log { T } } ) $ . Hence , the regret of DADAM is upper bounded by minimum of $ O ( G_\\infty D_T \\sqrt { T } ) $ and the bound presented in Theorems~4 and 5 , and thus the worst case dependence on $ T $ is $ \\sqrt { T } $ rather than $ \\sqrt { T \\log { T } } $ . It is worth mentioning that in the static setting , i.e. $ D_T=0 $ , the regret of DADAM is upper bounded by $ O ( G_\\infty \\sqrt { T } ) $ . Refer to Remark 6 on page 6 . 1-7 [ Comment ] 16. page 7 : Equation ( 14 ) . Does n't the presence of $ \\sigma_2 ( W ) $ imply that the $ O ( 1/T ) $ term may not be negligible ? It would also be helpful to give some examples of how large T needs to be in ( 15a ) and ( 15b ) in order for this statement to take effect . 1-7 [ Response ] Please see Response 1-3 . 1-8 [ Comment ] 18. page 9 : Figure 1 . Without error bars , it is impossible to tell the statistical significance of these results . Moreover , how sensitive are these results to different choices of hyperparameters ? 1-8 [ Response ] -- The numerical results shown in Figure~1 are based on the deterministic variants of DADAM , DGD and EXTRA algorithms with only local computation and neighbor communication . Indeed , our goal is to show the exact convergence to the reference logistic classifier $ \\theta^ * $ . Hence , error bars are provided based on the residual $ \\|\\frac { \\theta_T- \\theta^ * } { \\theta - \\theta^ * } \\| $ . We have provided a detailed implementation for different choices of hyperparameters in Appendix . Refer to Figure~1 on page 10 . Refer to Figures~3 and 4 on page 29 ."}, "2": {"review_id": "SJeUAj05tQ-2", "review_text": "Title: DADAM: A consensus-based distributed adaptive gradient method for online optimization Summary: The paper presented DADAM, a new consensus-based distributed adaptive moment estimation method, for online optimization. The author(s) also provide the convergence analysis and dynamic regret bound. The experiments show good performance of DADAM comparing to other methods. Comments: 1) The theoretical results are nice and indeed non-trivial. However, could you please explain the implication to equation (7a)? Does it have absolute value on the LHS? 2) Can you explain more clearly about the section 3.2.1? It is not clear to me why DADAM outperform ADAM here. 3) Did you perform algorithms on many runs and take the average? Also, did you tune the learning rate for all other algorithms to be the best performance? I am not sure how you choose the parameter \\alpha here. What if \\alpha changes and do not base on that in Yuan et al. 2016? 4) The deep learning experiments are quite simple. In order to validate the performance of the algorithm, it needs to be run on more datasets and networks architectures. MNIST and CIFAR-10 and these simple network architectures are quite standard. I would suggest to provide more if the author(s) have time. In general, I like this paper. I would love to have discussions with the author(s) during the rebuttal period. ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for very helpful and constructive feedback . A detailed point-by-point response to the reviewer 's comments follows . 1-1 [ Comment ] -- Could you please explain the implication to equation ( 7a ) ? Does it have absolute value on the LHS ? 1-1 [ Response ] -- Modified and Fixed . 1-2 [ Comment ] -- Can you explain more clearly about the section 3.2.1 ? It is not clear to me why DADAM outperform ADAM here . 1-2 [ Response ] -- In this section , we address the question of whether DADAM be faster than ADAM ( which is a centralized adaptive algorithm ) ? We provide the analysis for the convergence rate of the stochastic DADAM in the non-convex setting and show that the convergence rate of DADAM w.r.t time steps is similar to the mini-batch SGD , mini-batch ADAM , centralized parallel ADAM and parallel stochastic gradient descent , but DADAM avoids the communication traffic jam due to its locally distributed nature . - In the context of stochastic nonconvex optimization , we say a gradient-based method gives an $ \\epsilon $ -approximation solution if $ $ T^ { -1 } \\e { { \\bf Reg } ^N_T } \\leq \\epsilon $ $ where $ { \\bf Reg } ^N_T $ is defined in Section~2 ( please see Definition~2 ) . Now , assume that $ T $ is sufficiently large , it satisfies ( 16a ) and ( 16b ) , the $ \\frac { 1 } { T } $ term will be dominated by the $ \\frac { 1 } { \\sqrt { nT } } $ term which leads to a $ \\frac { 1 } { \\sqrt { nT } } $ convergence rate . More specifically , it shows that the computation complexity of DADAM to achieve $ \\epsilon $ -approximation solution is $ O ( 1/\\epsilon^2 ) $ . It is worth to mention that the computational complexity per iteration of DADAM is $ O ( n ) $ since the computation of a single stochastic gradient counts 1 . Further , since the total number of nodes does not affect the complexity , each node exhibits complexity of $ O\\big ( 1/ ( n\\epsilon^2 ) \\big ) $ . In summary , a linear speed up can be achieved by DADAM w.r.t computational complexity if $ T $ is sufficiently large . Refer to Subsection~3.2.1 on page 8 . 1-3 [ Comment ] Did you perform algorithms on many runs and take the average ? Also , did you tune the learning rate for all other algorithms to be the best performance ? I am not sure how you choose the parameter $ \\alpha $ here . What if $ \\alpha $ changes and do not base on that in Yuan et al.2016 ? 1-3 [ Response ] -- The experiment is repeated ten times and the average residuals are considered for comparison purposes . -- In [ 16KLY ] and [ 18JY ] , fast ergodic convergence rate of DGD was established assuming $ T $ is sufficiently large and the step sizes are $ \\alpha= \\frac { 1+ \\sigma_n } { \\rho } $ and $ \\alpha= \\frac { \\sigma_n } { \\rho } $ for convex and nonconvex objectives , respectively . Our numerical results show efficiency of adaptive algorithms by choosing these parameters . It is worth to mention that recommended $ alpha $ for adaptive gradient methods such as ADAM is equal to $ 0.001 $ but this is not optimal for decentralized gradient methods . [ 18JY ] Zeng Jinshan , and Wotao Yin . `` On nonconvex decentralized gradient descent . '' IEEE Transactions on Signal Processing 66.11 ( 2018 ) : 2834-2848 . [ 16KLY ] Yuan , Kun , Qing Ling , and Wotao Yin . `` On the convergence of decentralized gradient descent . '' SIAM Journal on Optimization 26.3 ( 2016 ) : 1835-1854 . Refer to Appendix on page 29 ."}}