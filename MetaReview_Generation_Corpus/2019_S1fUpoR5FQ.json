{"year": "2019", "forum": "S1fUpoR5FQ", "title": "Quasi-hyperbolic momentum and Adam for deep learning", "decision": "Accept (Poster)", "meta_review": "This paper presents quasi-hyperbolic momentum, a generalization of Nesterov Accelerated Gradient. The method can be seen as adding an additional hyperparameter to NAG corresponding to the weighting of the direct gradient term in the update. The contribution is pretty simple, but the paper has good discussion of the relationships with other momentum methods, careful theoretical analysis, and fairly strong experimental results. All the reviewers believe this is a strong paper and should be accepted, and I concur.\n", "reviews": [{"review_id": "S1fUpoR5FQ-0", "review_text": "Update after the author response: I am changing my rating from 6 to 7. The authors did a good job at clarifying where the gain might be coming from, and even though I maintain that decoupling the two variables is a simple modification, it leads to some valuable insights and good results which would of interest to the larger research community. ------- In this paper the authors propose simple modifications to SGD and Adam, called QH-variants, that can not only recover the \u201cparent\u201d method but a host of other optimization tricks that are widely used in the applied deep learning community. Furthermore, the resulting method achieves better performance on a suit of different tasks making it an appealing choice over the competing methods. Training a DNN can be tricky and substantial efforts have been made to improve on the popular SGD baseline with the goal of making training faster or reaching a better minima of the loss surface. The paper introduces a very simple modification to existing algorithms with surprisingly promising results. For example, on the face of it, QHM which is the modification of SGD, is exactly like momentum except we replace \\beta in eq. 1 to \\nu*\\beta. Without any analysis, I am not sure how such a change leads to dramatic difference in performance like the first subfigure in Fig. 2. The authors say that the performance of SGD was similar to that of momentum, but performance of momentum with \\beta = 0.7*0.999 should be the same as that of QHM. So where is the gain coming from? What am I missing here? Outside of that, the results are impressive and the simplicity of the method quite appealing. The authors put in substantial efforts to run a large number of experiments and providing a lot of extra material in the appendix for those looking to dive into all the details which is appreciated. In summary, there are a few results that I don\u2019t quite follow, but the rest of the paper is well organized and the method shows promise in practice. My only concern is the incremental nature of the method, which is only partly offset by the good presentation. ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . # QHM vs. momentum We appreciate the reviewer raising this potential point of confusion , and we would like to emphasize that replacing beta with ( nu * beta ) in momentum * does not * recover QHM . Analytically , we note that replacing beta with ( nu * beta ) in Equation 2 propagates nu into the momentum buffer ( g_t ) via Equation 1 , ultimately changing the decay rate of the momentum buffer from beta to ( nu * beta ) . Intuitively , we note that QHM constitutes the * complete * decoupling of the momentum buffer 's decay rate ( beta ) from the current gradient 's contribution to the update rule ( 1 - nu * beta ) . In contrast , momentum tightly couples the decay rate ( beta ) and the current gradient 's contribution ( 1 - beta ) . It is crucial to understand this difference as it reveals QHM 's added expressivity over momentum , and we concur that more explicit discussion of this difference would be beneficial . We have updated the manuscript as follows : - Appendix A.8 analytically demonstrates the difference between the two , in terms of the weight on each past gradient . - Section 3 of the main text briefly and intuitively describes the added expressive power of QHM over momentum , in line with the above explanation . # Incrementality We appreciate the reviewer 's honest assessment of the incrementality of the approach , but respectfully disagree . In the interest of accessibility , we have intentionally presented the simplest possible exposition of the algorithm , rather than the various more complex formulations possible with our original motivation . On first principles , we believe that this simplicity is a benefit rather than a disadvantage . Yet this simplicity belies both theoretical and practical power . Theoretically , we have demonstrated that many powerful but opaque optimization algorithms ( essentially , all two-state linear first-order optimizers ) boil down to decoupling the momentum buffer 's decay rate from the current gradient 's weight , and we have presented the most direct and efficient method to do so . And practically , we have demonstrated improvements that are at least as significant as the improvement between plain SGD and momentum/NAG . Although we wish to err toward understating rather than overstating our contributions , we would be deeply appreciative of any suggestions the reviewer could offer to improve the articulation of these points in the manuscript ."}, {"review_id": "S1fUpoR5FQ-1", "review_text": "Edit: Following response, I have updated my score from 6 to 7. I completed this review as an emergency reviewer - meaning that I had little time to complete the review. I did not have time to cover all of the material in the lengthy appendix but hope that I explored the parts most relevant to my comments below. Paper summary: The paper introduces QHM, a simple variant of classical momentum which takes a weighted average of the momentum and gradient update. The authors comprehensively analyze the relationships between QHM and other momentum based optimization schemes. The authors present an empirical evaluation of QHM and QHAdam showing comparable performance with existing approaches. Detailed comments: I'll use CM to denote classical momentum, referred to as \"momentum\" in the paper. 1) In the introduction, you reference gradient variance reduction as a motivation for QHM. But in Section 3 you defer readers to the appendix for the motivation of QHM. I think that the main paper should include a brief explanation of this motivation. 2) The proposed QHM looks quite similar to a special case of Aggregated Momentum [1]. It seems that the key difference is with the use of damping but I suspect that this can be largely eliminated by using different learning rates for each velocity (as in Section 4 of [1]) and/or adopting damping in AggMo. In fact, Section 4.1 in your paper recovers Nesterov momentum in a very similar way. More generally, could one think of AggMo as a generalization of QHM? It averages plain SGD and several momentum steps on different time scales. 3) I thought that some of the surprising relations to other momentum based optimizers was the most interesting part of the paper. However, I found the presentation a little difficult. There are many algorithms presented but none are explored fully in the main paper. I had to flick between the main paper and appendix to uncover the information I wanted most from the paper. Moreover, I found some of the arguments in the appendix a little tough to follow. For example, with AccSGD you should specify that epsilon is a constant typically chosen to be 0.7. When the correspondence to QHM is presented it is not obvious that QHM -> AccSGD but not the other way around. I would suggest that you present a few algorithms in greater detail, and list the other algorithms you explore at the end of Section 4 with pointers to the appendix. 4) I am not sure that the QHAdam algorithm adds much to the paper. It is not explored theoretically and I found the empirical analysis fairly limited. 5) In general, the empirical results support QHM as an improvement on SGD/NAG. But I have some (fairly minor) concerns. a) For Figure 1, it looks like QHM beats QHAdam on MLP-EMNIST. Why not show these on the same plot? This goes back to my point 4 - it does not look like QHAdam improves on QHM and so I am not sure why it is included. The idea of averaging gradients and momentum is general - why explore QHAdam in particular? b) For Figure 2, while I certainly appreciate the inclusion of error bars, they suggest that the performance of all methods are very similar. In Table 3, QH and the baselines are often not just within a standard deviation of eachother but also have very close means (relatively). 6) I feel that some of the claims made in the paper are a little strong. E.g. \"our algorithms lead to significantly improved training in a variety of settings\". I felt that the evidence for this was lacking. Overall, I felt that the paper offered many interesting results but clarity could be improved. I have some questions about the empirical results but felt that the overall story was strong. I hope that the issues I presented above can be easily addressed by the authors. Minor comments: - I thought the use of bold text in the introduction was unnecessary - Some summary of the less common tasks in Table 2 should be given in the main paper Clarity: I found the paper quite difficult to follow in places and found myself bouncing around the appendix frequently. While the writing is good I think that some light restructuring would improve the flow. Significance: The paper presents a simple tweak to classical momentum but takes care to identify its relation to existing algorithms. The empirical results are not overwhelming but at least show QHM as competitive with CM on tasks and architecture where SGD is typically dominant. Originality: To my knowledge, the paper presents original findings and places itself well amongst existing work. References: [1] Lucas et al. \"Aggregated Momentum: Stability Through Passive Damping\" https://arxiv.org/pdf/1804.00325.pdf", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . The reviewer has offered a large number of insightful comments , which is particularly appreciated given the exigence of the review request . For convenience , we address them by number : # 1 We concur with the reviewer 's suggestion and have updated Section 3 of the manuscript to provide this brief summary . # 2 We appreciate the pointer to the AggMo algorithm ( Lucas et al. , 2018 ) , which proposes the additive use of many momentum buffers with different values of beta ( the momentum constant ) . We had tried this in independent preliminary experimentation ( toward analyzing many-state optimization ) , and we found that using multiple momentum buffers yields negligible value over using a single slow-decaying momentum buffer and setting an appropriate immediate discount ( i.e.QHM with high beta and appropriate nu ) . Given the added costs and complexity of using multiple momentum buffers , we decided against discussing many-state optimization . We believe that the two papers are largely orthogonal , as one paper focuses in depth on two-state optimization , while the other more broadly explores many-state optimization . However , in light of AggMo 's existence , we believe it is valuable to comment on the relationship between QHM and AggMo . Specifically , we have updated the manuscript as follows : - In section 4.5 , we briefly connect QHM to AggMo . - In Appendix H , we provide a supplemental discussion and comparison with AggMo . Specifically , we perform the autoencoder study from Appendix D.1 of Lucas et al . ( 2018 ) with both algorithms , using the EMNIST dataset . In short , we believe that the results of this comparison support the above notion from our preliminary experimentation . # 3 We appreciate the feedback on the presentation of Section 4 . We have attempted to cater to a diverse audience across the practitioner-theorist spectrum , and the strongest feedback we received pre-submission is that many readers on both ends of the spectrum appreciate to have in the main text only : - The analytical form ( i.e.update rule ) of the discussed algorithm , and brief efficiency discussion - The succinct \u201c upshot \u201d as it relates to QHM ( i.e.narrative summary of the recovery result ) and for the mathematical derivations and specific recovery parameterizations to be relegated to the appendix . In particular , we have received feedback that the matrix machinery required for most of the recoveries detracts from the main text , and any detailed derivations depend on this machinery . In recognition of the reviewer 's concerns , we have updated Appendix C of the manuscript to be more structured and self-contained ( essentially , a more detailed version of Sections 4.2 through 4.4 ) , so that the more theory-minded audience might have an easier time reading without having to switch back-and-forth between Appendix C and the main text . We would very much welcome suggestions on what specific facts merit inclusion in the main paper , besides the analytical forms of the update rules and narrative relation to QHM . Regarding AccSGD specifically , we have updated the manuscript to more clearly explain the one-way nonrecovery ( both in the main text and in the appendix ) . We believe that our current method of showing this nonrecovery ( via NAG ) is the most accessible , while revealing a useful erratum in the prior work of Kidambi et al . ( 2018 ) ."}, {"review_id": "S1fUpoR5FQ-2", "review_text": "The authors introduce a class of quasi-hyperbolic algorithms that mix SGD with SGDM (or similar with Adam) and show improved empirical results. They also prove theoretical convergence of the methods and motivate the design well. The paper is well-written and contained the necessary references. Although I did feel that the authors could have better compared their method against the recent AggMom (Aggregated Momentum: Stability Through Passive Damping by Lucas et al.). Seems like there are a few similarities there. I enjoyed reading this paper and endorse it for acceptance. The theoretical results presented and easy to follow and state the assumptions clearly. I appreciated the fact that the authors aimed to keep the paper self-contained in its theory. The numerical experiments are thorough and fair. The authors test the algorithms on an extremely wide set of problems ranging from image recognition (including CIFAR and ImageNet), natural language processing (including the state-of-the-art machine translation model), and reinforcement learning (including MuJoCo). I have not seen such a wide comparison in any paper proposing training algorithms before. Further, the numerical experiments are well-designed and also fair. The hyperparameters are chosen carefully, and both training and validation errors are presented. I also appreciate that the authors made the code available during the reviewing phase. Out of curiosity, I ran the code on some of my workflows and found that there was some improvement in performance as well. ", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . We are heartened that the reviewer has found the algorithms useful for their own applications ! # Using multiple momentum buffers We appreciate the pointer to the AggMo algorithm ( Lucas et al. , 2018 ) , which proposes the additive use of many momentum buffers with different values of beta ( the momentum constant ) . We had tried this in independent preliminary experimentation ( toward analyzing many-state optimization ) , and we found that using multiple momentum buffers yields negligible value over using a single slow-decaying momentum buffer and setting an appropriate immediate discount ( i.e.QHM with high beta and appropriate nu ) . Given the added costs and complexity of using multiple momentum buffers , we decided against discussing many-state optimization . We believe that the two papers are largely orthogonal , as one paper focuses in depth on two-state optimization , while the other more broadly explores many-state optimization . However , in light of AggMo 's existence , we believe it is valuable to comment on the relationship between QHM and AggMo . Specifically , we have updated the manuscript as follows : - In section 4.5 , we briefly connect QHM to AggMo . - In Appendix H , we provide a supplemental discussion and comparison with AggMo . Specifically , we perform the autoencoder study from Appendix D.1 of Lucas et al . ( 2018 ) with both algorithms , using the EMNIST dataset . In short , we believe that the results of this comparison support the above notion from our preliminary experimentation ."}], "0": {"review_id": "S1fUpoR5FQ-0", "review_text": "Update after the author response: I am changing my rating from 6 to 7. The authors did a good job at clarifying where the gain might be coming from, and even though I maintain that decoupling the two variables is a simple modification, it leads to some valuable insights and good results which would of interest to the larger research community. ------- In this paper the authors propose simple modifications to SGD and Adam, called QH-variants, that can not only recover the \u201cparent\u201d method but a host of other optimization tricks that are widely used in the applied deep learning community. Furthermore, the resulting method achieves better performance on a suit of different tasks making it an appealing choice over the competing methods. Training a DNN can be tricky and substantial efforts have been made to improve on the popular SGD baseline with the goal of making training faster or reaching a better minima of the loss surface. The paper introduces a very simple modification to existing algorithms with surprisingly promising results. For example, on the face of it, QHM which is the modification of SGD, is exactly like momentum except we replace \\beta in eq. 1 to \\nu*\\beta. Without any analysis, I am not sure how such a change leads to dramatic difference in performance like the first subfigure in Fig. 2. The authors say that the performance of SGD was similar to that of momentum, but performance of momentum with \\beta = 0.7*0.999 should be the same as that of QHM. So where is the gain coming from? What am I missing here? Outside of that, the results are impressive and the simplicity of the method quite appealing. The authors put in substantial efforts to run a large number of experiments and providing a lot of extra material in the appendix for those looking to dive into all the details which is appreciated. In summary, there are a few results that I don\u2019t quite follow, but the rest of the paper is well organized and the method shows promise in practice. My only concern is the incremental nature of the method, which is only partly offset by the good presentation. ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . # QHM vs. momentum We appreciate the reviewer raising this potential point of confusion , and we would like to emphasize that replacing beta with ( nu * beta ) in momentum * does not * recover QHM . Analytically , we note that replacing beta with ( nu * beta ) in Equation 2 propagates nu into the momentum buffer ( g_t ) via Equation 1 , ultimately changing the decay rate of the momentum buffer from beta to ( nu * beta ) . Intuitively , we note that QHM constitutes the * complete * decoupling of the momentum buffer 's decay rate ( beta ) from the current gradient 's contribution to the update rule ( 1 - nu * beta ) . In contrast , momentum tightly couples the decay rate ( beta ) and the current gradient 's contribution ( 1 - beta ) . It is crucial to understand this difference as it reveals QHM 's added expressivity over momentum , and we concur that more explicit discussion of this difference would be beneficial . We have updated the manuscript as follows : - Appendix A.8 analytically demonstrates the difference between the two , in terms of the weight on each past gradient . - Section 3 of the main text briefly and intuitively describes the added expressive power of QHM over momentum , in line with the above explanation . # Incrementality We appreciate the reviewer 's honest assessment of the incrementality of the approach , but respectfully disagree . In the interest of accessibility , we have intentionally presented the simplest possible exposition of the algorithm , rather than the various more complex formulations possible with our original motivation . On first principles , we believe that this simplicity is a benefit rather than a disadvantage . Yet this simplicity belies both theoretical and practical power . Theoretically , we have demonstrated that many powerful but opaque optimization algorithms ( essentially , all two-state linear first-order optimizers ) boil down to decoupling the momentum buffer 's decay rate from the current gradient 's weight , and we have presented the most direct and efficient method to do so . And practically , we have demonstrated improvements that are at least as significant as the improvement between plain SGD and momentum/NAG . Although we wish to err toward understating rather than overstating our contributions , we would be deeply appreciative of any suggestions the reviewer could offer to improve the articulation of these points in the manuscript ."}, "1": {"review_id": "S1fUpoR5FQ-1", "review_text": "Edit: Following response, I have updated my score from 6 to 7. I completed this review as an emergency reviewer - meaning that I had little time to complete the review. I did not have time to cover all of the material in the lengthy appendix but hope that I explored the parts most relevant to my comments below. Paper summary: The paper introduces QHM, a simple variant of classical momentum which takes a weighted average of the momentum and gradient update. The authors comprehensively analyze the relationships between QHM and other momentum based optimization schemes. The authors present an empirical evaluation of QHM and QHAdam showing comparable performance with existing approaches. Detailed comments: I'll use CM to denote classical momentum, referred to as \"momentum\" in the paper. 1) In the introduction, you reference gradient variance reduction as a motivation for QHM. But in Section 3 you defer readers to the appendix for the motivation of QHM. I think that the main paper should include a brief explanation of this motivation. 2) The proposed QHM looks quite similar to a special case of Aggregated Momentum [1]. It seems that the key difference is with the use of damping but I suspect that this can be largely eliminated by using different learning rates for each velocity (as in Section 4 of [1]) and/or adopting damping in AggMo. In fact, Section 4.1 in your paper recovers Nesterov momentum in a very similar way. More generally, could one think of AggMo as a generalization of QHM? It averages plain SGD and several momentum steps on different time scales. 3) I thought that some of the surprising relations to other momentum based optimizers was the most interesting part of the paper. However, I found the presentation a little difficult. There are many algorithms presented but none are explored fully in the main paper. I had to flick between the main paper and appendix to uncover the information I wanted most from the paper. Moreover, I found some of the arguments in the appendix a little tough to follow. For example, with AccSGD you should specify that epsilon is a constant typically chosen to be 0.7. When the correspondence to QHM is presented it is not obvious that QHM -> AccSGD but not the other way around. I would suggest that you present a few algorithms in greater detail, and list the other algorithms you explore at the end of Section 4 with pointers to the appendix. 4) I am not sure that the QHAdam algorithm adds much to the paper. It is not explored theoretically and I found the empirical analysis fairly limited. 5) In general, the empirical results support QHM as an improvement on SGD/NAG. But I have some (fairly minor) concerns. a) For Figure 1, it looks like QHM beats QHAdam on MLP-EMNIST. Why not show these on the same plot? This goes back to my point 4 - it does not look like QHAdam improves on QHM and so I am not sure why it is included. The idea of averaging gradients and momentum is general - why explore QHAdam in particular? b) For Figure 2, while I certainly appreciate the inclusion of error bars, they suggest that the performance of all methods are very similar. In Table 3, QH and the baselines are often not just within a standard deviation of eachother but also have very close means (relatively). 6) I feel that some of the claims made in the paper are a little strong. E.g. \"our algorithms lead to significantly improved training in a variety of settings\". I felt that the evidence for this was lacking. Overall, I felt that the paper offered many interesting results but clarity could be improved. I have some questions about the empirical results but felt that the overall story was strong. I hope that the issues I presented above can be easily addressed by the authors. Minor comments: - I thought the use of bold text in the introduction was unnecessary - Some summary of the less common tasks in Table 2 should be given in the main paper Clarity: I found the paper quite difficult to follow in places and found myself bouncing around the appendix frequently. While the writing is good I think that some light restructuring would improve the flow. Significance: The paper presents a simple tweak to classical momentum but takes care to identify its relation to existing algorithms. The empirical results are not overwhelming but at least show QHM as competitive with CM on tasks and architecture where SGD is typically dominant. Originality: To my knowledge, the paper presents original findings and places itself well amongst existing work. References: [1] Lucas et al. \"Aggregated Momentum: Stability Through Passive Damping\" https://arxiv.org/pdf/1804.00325.pdf", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . The reviewer has offered a large number of insightful comments , which is particularly appreciated given the exigence of the review request . For convenience , we address them by number : # 1 We concur with the reviewer 's suggestion and have updated Section 3 of the manuscript to provide this brief summary . # 2 We appreciate the pointer to the AggMo algorithm ( Lucas et al. , 2018 ) , which proposes the additive use of many momentum buffers with different values of beta ( the momentum constant ) . We had tried this in independent preliminary experimentation ( toward analyzing many-state optimization ) , and we found that using multiple momentum buffers yields negligible value over using a single slow-decaying momentum buffer and setting an appropriate immediate discount ( i.e.QHM with high beta and appropriate nu ) . Given the added costs and complexity of using multiple momentum buffers , we decided against discussing many-state optimization . We believe that the two papers are largely orthogonal , as one paper focuses in depth on two-state optimization , while the other more broadly explores many-state optimization . However , in light of AggMo 's existence , we believe it is valuable to comment on the relationship between QHM and AggMo . Specifically , we have updated the manuscript as follows : - In section 4.5 , we briefly connect QHM to AggMo . - In Appendix H , we provide a supplemental discussion and comparison with AggMo . Specifically , we perform the autoencoder study from Appendix D.1 of Lucas et al . ( 2018 ) with both algorithms , using the EMNIST dataset . In short , we believe that the results of this comparison support the above notion from our preliminary experimentation . # 3 We appreciate the feedback on the presentation of Section 4 . We have attempted to cater to a diverse audience across the practitioner-theorist spectrum , and the strongest feedback we received pre-submission is that many readers on both ends of the spectrum appreciate to have in the main text only : - The analytical form ( i.e.update rule ) of the discussed algorithm , and brief efficiency discussion - The succinct \u201c upshot \u201d as it relates to QHM ( i.e.narrative summary of the recovery result ) and for the mathematical derivations and specific recovery parameterizations to be relegated to the appendix . In particular , we have received feedback that the matrix machinery required for most of the recoveries detracts from the main text , and any detailed derivations depend on this machinery . In recognition of the reviewer 's concerns , we have updated Appendix C of the manuscript to be more structured and self-contained ( essentially , a more detailed version of Sections 4.2 through 4.4 ) , so that the more theory-minded audience might have an easier time reading without having to switch back-and-forth between Appendix C and the main text . We would very much welcome suggestions on what specific facts merit inclusion in the main paper , besides the analytical forms of the update rules and narrative relation to QHM . Regarding AccSGD specifically , we have updated the manuscript to more clearly explain the one-way nonrecovery ( both in the main text and in the appendix ) . We believe that our current method of showing this nonrecovery ( via NAG ) is the most accessible , while revealing a useful erratum in the prior work of Kidambi et al . ( 2018 ) ."}, "2": {"review_id": "S1fUpoR5FQ-2", "review_text": "The authors introduce a class of quasi-hyperbolic algorithms that mix SGD with SGDM (or similar with Adam) and show improved empirical results. They also prove theoretical convergence of the methods and motivate the design well. The paper is well-written and contained the necessary references. Although I did feel that the authors could have better compared their method against the recent AggMom (Aggregated Momentum: Stability Through Passive Damping by Lucas et al.). Seems like there are a few similarities there. I enjoyed reading this paper and endorse it for acceptance. The theoretical results presented and easy to follow and state the assumptions clearly. I appreciated the fact that the authors aimed to keep the paper self-contained in its theory. The numerical experiments are thorough and fair. The authors test the algorithms on an extremely wide set of problems ranging from image recognition (including CIFAR and ImageNet), natural language processing (including the state-of-the-art machine translation model), and reinforcement learning (including MuJoCo). I have not seen such a wide comparison in any paper proposing training algorithms before. Further, the numerical experiments are well-designed and also fair. The hyperparameters are chosen carefully, and both training and validation errors are presented. I also appreciate that the authors made the code available during the reviewing phase. Out of curiosity, I ran the code on some of my workflows and found that there was some improvement in performance as well. ", "rating": "8: Top 50% of accepted papers, clear accept", "reply_text": "We thank the reviewer for their encouraging and constructive feedback . We are heartened that the reviewer has found the algorithms useful for their own applications ! # Using multiple momentum buffers We appreciate the pointer to the AggMo algorithm ( Lucas et al. , 2018 ) , which proposes the additive use of many momentum buffers with different values of beta ( the momentum constant ) . We had tried this in independent preliminary experimentation ( toward analyzing many-state optimization ) , and we found that using multiple momentum buffers yields negligible value over using a single slow-decaying momentum buffer and setting an appropriate immediate discount ( i.e.QHM with high beta and appropriate nu ) . Given the added costs and complexity of using multiple momentum buffers , we decided against discussing many-state optimization . We believe that the two papers are largely orthogonal , as one paper focuses in depth on two-state optimization , while the other more broadly explores many-state optimization . However , in light of AggMo 's existence , we believe it is valuable to comment on the relationship between QHM and AggMo . Specifically , we have updated the manuscript as follows : - In section 4.5 , we briefly connect QHM to AggMo . - In Appendix H , we provide a supplemental discussion and comparison with AggMo . Specifically , we perform the autoencoder study from Appendix D.1 of Lucas et al . ( 2018 ) with both algorithms , using the EMNIST dataset . In short , we believe that the results of this comparison support the above notion from our preliminary experimentation ."}}