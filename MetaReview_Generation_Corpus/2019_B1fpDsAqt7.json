{"year": "2019", "forum": "B1fpDsAqt7", "title": "Visual Reasoning by Progressive Module Networks", "decision": "Accept (Poster)", "meta_review": "Important problem (modular & interpretable approaches for VQA and visual reasoning); well-written manuscript, sensible approach. Paper was reviewed by three experts. Initially there were some concerns but after the author response and reviewer discussion, all three unanimously recommend acceptance. ", "reviews": [{"review_id": "B1fpDsAqt7-0", "review_text": "Summary: The authors propose a network for VQA incorporating hand-crafted modules and their hierarchy, each of which is a network for a high-level vision task. Some modules may share the same sub-modules at a different level in the module hierarchy. Each module is individually (not end-to-end) trained with a dataset containing a dedicated annotation for their high-level tasks. The proposed model shows comparable scores to the existing models. Presentation and clarity: The paper is well written and easy to follow and contains reasonable experiments for understanding the proposed method. Originality and significance: I mainly do not agree that this work generalizes NMN. Instead, I believe that this work is a special case of NMN where the modules and their hierarchy are manually defined based on the authors' intuition. Meanwhile, the proposed network architecture is static, and thus the main idea of having multiple modules in a network is not novel as other approaches using static network architectures such as [A] also facilitate multiple modules for different sub-procedures (e.g., RNN for questions and CNN for image) and sometimes share modules in multiple stages too. The main difference between this and previous works is that the modules in this work deal with high-level tasks chosen by the authors. I am not convinced that designing the modules with high-level tasks is a better choice over designing modules that are less task-specific. Rather, I see more drawbacks as the proposed method requires multiple datasets with diverse task-specific annotation. Also, the modules and their connectivity are less scalable and extendable as they are not learned. Considering all the model and dataset complexities, the improvements over black-box models are mostly marginal. The main benefits we get from all these complexities are the interpretability. However, for many modules, the interpretability comes from indirect signals that are often not clear how to interpret for the question answering. On the other hand, the manually designed sub-tasks may cause error propagation in the network as these modules are not directly optimized for the final objective. Some questions and comments: I do not understand why it is necessary to have the image captioning module as it does not directly relate to the question answering. Moreover, the caption itself is generated without conditioning on the question. [A] Yang, Zichao, et al. \"Stacked attention networks for image question answering.\" CVPR 2016. == After discussion phase Based on the rebuttal and additional experiments that clarified and resolved my questions, I change my initial rating.", "rating": "6: Marginally above acceptance threshold", "reply_text": "Thanks for the feedback . We hope to convince you that PMN is a framework to learn continuously from previous knowledge , and not just a solution to VQA . 1.PMN vs. NMN - We agree that PMN is not a generalization of NMN . However , we argue that it is not a special case of NMN either . We highlight two significant differences : a ) Progression : PMN is a framework that learns to do ( visual ) reasoning by starting with simpler tasks ( object labels ) and building up to more complex tasks ( VQA ) . This is an important step towards building intelligent agents that continuously learn new tasks by using the tasks they are already good at . There is no sense of progression in NMN and everything is learned from scratch . From the experiments related to the low data regime ( Table 6 ) , we see that PMN can make efficient use of available data to learn to communicate with experts and solve the task . b ) Task Modules : Communication in PMN is at the * query-answer level * . Since module outputs are answers to other ( human-designed ) tasks , the process is easier to interpret ( more human-readable ) . On the other hand , NMN \u2019 s modules , as showcased in their paper , contained one or two conv . or linear layers and solve sub-functions such as attention or classification . We edited the paper to remove misunderstanding our wording may have caused . 2.PMN vs. Static models - In addition to the above differences to NMN , PMN has three more significant differences to static models ( [ A ] ) . a ) Dynamic choice of modules : PMN \u2019 s state and importance function choose which modules to consider . This can go even further , and using a threshold , we may not execute some modules at all ( during inference ) . Static models always go through the same steps . b ) Information propagates in a tree-like fashion : A high-level module asks for some information from a lower module , that further produces queries for its own lower modules ( see Fig.1 ) .For example , VQA calls counting which calls relationship detection . c ) Direct querying of lower modules : PMN produces explicit queries for lower tasks using the query transmitter Q ( see Fig.2 , step 3 ) . Based on the current state , it can choose to ask information about a specific query that may be helpful to answer the question . The inter-module communication and the computation graph are all learned . 3.Modules with high-level tasks , Multiple datasets - Task-specific models are the default practice in machine learning . However , to have an intelligent agent that can learn a host of tasks over time it is beneficial to have the tasks build on top of each other ( See 1 . ( a ) ) .This is similar to the human learning process where kids first learn object names and attributes , followed by increasingly harder tasks such as counting . Datasets in the community are typically focused on one specific task , and thus we are forced to use multiple datasets and annotations to progressively learn visual reasoning abilities . 4.Minor improvements over black-box models , Interpretability - We encourage the reviewer to look at our paper in a more holistic view . Our main aim is to mimic challenging real scenarios in which we want to train agents to learn many tasks , increasing in their complexity , rather than squeezing numbers for one particular dataset . The VQA dataset has a strong bias that is exploited by black-box models [ B ] . This is one of the reasons why PMN performs much better than the other models in the low data regime ( Table 6 ) - the gap gets smaller with more data as black-box models learn to exploit dataset bias . The paper showcases how to learn tasks by progression and modularity . We hope this is interesting to readers beyond just the numbers . The fact that the performance also improves is a nice bonus . With respect to interpretability , the query-answer communication within PMN is more human-readable than other models ( See 1 . ( b ) ) .For example , as shown in Fig.2 , it produces queries for the relationship module ( bird , \u2018 on top of \u2019 ) and the relationship module returns the box corresponding to 'bench ' . Other examples such as Fig.3 , App.C & D , and the human evaluation concretely support the fact that generated outputs are much more interpretable than standard attention maps . 5.Error propagation - PMN combines information from the lower modules through importance scores . For a given set of questions , if a module produces erroneous outputs , PMN can learn to ignore such outputs and rely on other modules or it \u2019 s own residual . 6.Captioning for VQA - In captioning , one describes the most salient aspects of the picture . For example , a caption \u201c a married couple walking on the beach \u201d , provides answers to several questions ( 'are they married ? ' , 'where are they ? ' , etc ) .If the actual question relates to these , then the VQA module can simply leverage the information . In response to R2 , we evaluated how well VQA can leverage ground-truth captions and see a large 2.0 % improvement . [ B ] Agrawal , et al.Overcoming Priors for VQA . 2018"}, {"review_id": "B1fpDsAqt7-1", "review_text": "[Summary] This paper presents a multi-task learning approach for VQA that represent a solver for each task as a neural module that calls existing modules in a program manner. The authors manually design the task hierarchy and propose a progressive module network to recursive calls the lower modules and gather the information by soft-attention. The final prediction uses all the states and question to infer the final answers. The authors verify the effectiveness of the proposed method on the performance of different tasks and modules. Experiment on VQA shows the proposed model benefits from utilizing different modules. The authors also qualitatively show the model's reasoning process and human study on judging answering quality. [Strength] 1. The proposed method is novel and explores to use the existing modules as a black box for visual question answering. This is different from most existing work. 2: By examing different modules, the proposed method is more interpretable compare to canonical methods. 3: The experiment results are good, especially for the counting problem. [Weakness] 1. The title of the paper is \"visual reasoning by progressive module networks.\" The title may be a little overstated since the major task is focused on visual question answering (VQA). 2. Annotation is not clear in this paper. For example, on page 3, Query transmitter and receiver, \"the output o_k = M_k(q_k) received from M_k is modified using receiver function as v_k = R_{k->n}(s^t, o_k). \" There are multiple new variables in this paragraph, without specifying the dimension and meaning for each attribute, it's really hard to understand. On page 4, State update function, what is the meaning of variable \"Epsilon\" in the equation? From the supplementary, it seems Epsilon means the environment? 3. On the object counting task, the query transmitter needs to produce a query for a relationship module. The authors mentioned that this is softly calculated by softmax on the importance score. Since q_rel require one hot vector as input, how to sample the q_rel given the importance score and how backprob the gradient in this case? 4. The cider score of image captioning is 109 compared to the baseline 108. The explanation is the COCO dataset has a fixed set of 80 object categories and does not benefit from training the diverse data. Since the input visual feature is the same, the only difference is the proposed model has additional label embedding as input. My assumption is the visual feature already contains the label information for image captioning. 5. On relational detection task, is there a way to compare with the STOA method on some specific data split? This will leads to much more convincing results. 6. Similar as above question, on the object counting task, is there a way to compare with previous counting methods? 7. In Table 4, the accuracy of number on Zhang et.al is 49.39, which is higher than other methods, while on test-dev, the accuracy is 51.62, which is lower than others. Is the number right? ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for the comments and feedback . We will certainly clarify them in the final paper . 1.Title of the paper - We agree that the main highest-level task that we show is VQA , even though our method is more general . Our title aimed to convey that we showcase PMN on a host of increasingly complex visual reasoning tasks such as relationship detection , counting , and captioning , as well as VQA . Our focus is on VQA as it happens to be one of the most complex visual reasoning tasks that can leverage each of the ( relatively ) simpler tasks . 2.Description of variables - Thanks for the feedback . Epsilon means the environment , some of the definitions are written in Section 3 , but we agree that it can be somewhat challenging to interpret as there are many variables . We edited the text to address variables more gently and to explain the arrow sign . 3.Query for the relationship module - The relationship module is fed an N-dimensional ( corresponding to N image regions ) one-hot vector as input during training . When it is called by other task modules ( such as counting ) , an N-dimensional probability vector is computed using softmax on image regions ( see A.4 , point 3 ) and not using the importance scores . This acts as a soft version of the one-hot sampled vector so that we can backpropagate gradients . 4.CIDEr score of captioning - That may be true to some extent . However , we think that explicit label information might still be useful since the visual features ( environment ) are from Faster RCNN and contain diverse information such as edges , background , color , and size . 5 and 6.Comparison with SOTA models for counting and relationship detection - To the best of our knowledge , Zhang et al . ( 2018 ) is the SOTA method on counting in the context of visual question answering . Our counting module leverages that but achieves higher performance on the number questions - 54.39 % with ensembling and 52.12 % without vs. 51.62 % of Zhang et al . ( 2018 ) .Note that 51.62 % of Zhang et al . ( 2018 ) is from a single highly regularized model that provides small gains from ensembling . This shows that additional modules help . Kim et al . ( 2018 ) which is concurrent to our work shows similar performance . For the relationship detection task , other works such as Lu et al . ( 2016 ) unfortunately have a different setup which makes direct comparison difficult . 7.Table 4 , accuracies are from Zhang et al.2018 - Yes , the numbers are from their paper . One possible explanation for this could be their use of high regularization for a single model instead of ensembling . Thus , the performance improvement from training on the train set ( evaluating on validation ) to training on train+val ( evaluating on test-dev ) is smaller . ( Zhang et al.2018 ) Learning to Count Objects in Natural Images for Visual Question Answering ( Kim et al.2018 ) Bilinear Attention Networks ( Lu et al.2016 ) Visual Relationship Detection with Language Priors"}, {"review_id": "B1fpDsAqt7-2", "review_text": "The paper proposes to learn task-level modules progressively to perform the task of VQA. Such task-level modules include object/attribute prediction, image captioning, relationship detection, object counting, and finally VQA model. The benefit of using modules for reasoning allows one to visualize the reasoning process more easily to understand the model better. The results are mainly shown on VQA 2.0 set, with a good amount of analysis. - I think overall this is a good paper, with clear organization, detailed description of the approach, solid analysis of the approach and cool visualization. I especially appreciate that analysis is done taking into consideration of extra computation cost of the large model; the extra data used for visual relationship detection. I do not have major comments about the paper itself, although I did not check the technical details super carefully. - One thing I am confused about is the residual model, which seems quite important for the pipeline but I cannot find details describing it and much analysis on this component. - I am in general curious to see if it will be beneficial to fine-tune the modules themselves can further improve performance. It maybe hard to do it entirely end-to-end, but maybe it is fine to fine-tune just a few top layers (like what Jiang et al did)? - One great benefit of having a module-based model is feed in the *ground truth* output for some of the modules. For example, what benefit we can get if we have perfect object detection? Where can we get if we have perfect relationships? This can help us not only better understand the models, but also the dataset (VQA) and the task in general. ", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer for the comments and feedback . We will also include the suggested experiment that shows the plug-and-play nature of PMN . 1.Residual modules - Residual modules are small neural networks ( e.g. , an MLP for Mvqa , Sec.3.4 , ( 4 ) ) that a task module may use when other lower level modules are incapable of providing a solution to a given query . For example , consider the question \u201c is this person going to be happy ? \u201d on an image of a person opening a present . Lower level modules of Mvqa may not be sufficient to solve the question . Therefore , Mvqa would make use of its residual module , which would essentially learn to \u201c pick up \u201d all queries that lower level modules can not answer . 2.Effect of fine-tuning - While it might be beneficial to fine-tune the modules for a specific parent task we want each module to be an expert for their own task as it facilitates a plug-and-play architecture . Fine-tuning may push the modules towards blindly improving parent module \u2019 s performance but ( i ) badly affect interpretability of inputs and outputs ; and ( ii ) may also reduce the lower module \u2019 s performance on its own task . Most importantly , it would not scale with the number of tasks , as for each task the agent would need to keep several fine-tuned modules of the lower tasks in memory . 3.Feeding in the ground-truth - Thanks for this great suggestion . We performed an experiment where we evaluate the benefits that the VQA model may achieve by using ground-truth captions instead of captions generated by the caption module . Our preliminary experiments show a gain of about 2.0 % which is a relatively high gain for VQA . This points to important properties of the PMN allowing human-in-the-loop type of continual learning , where a human teacher can pinpoint flaws in the reasoning process and potentially help the model to fix them ."}], "0": {"review_id": "B1fpDsAqt7-0", "review_text": "Summary: The authors propose a network for VQA incorporating hand-crafted modules and their hierarchy, each of which is a network for a high-level vision task. Some modules may share the same sub-modules at a different level in the module hierarchy. Each module is individually (not end-to-end) trained with a dataset containing a dedicated annotation for their high-level tasks. The proposed model shows comparable scores to the existing models. Presentation and clarity: The paper is well written and easy to follow and contains reasonable experiments for understanding the proposed method. Originality and significance: I mainly do not agree that this work generalizes NMN. Instead, I believe that this work is a special case of NMN where the modules and their hierarchy are manually defined based on the authors' intuition. Meanwhile, the proposed network architecture is static, and thus the main idea of having multiple modules in a network is not novel as other approaches using static network architectures such as [A] also facilitate multiple modules for different sub-procedures (e.g., RNN for questions and CNN for image) and sometimes share modules in multiple stages too. The main difference between this and previous works is that the modules in this work deal with high-level tasks chosen by the authors. I am not convinced that designing the modules with high-level tasks is a better choice over designing modules that are less task-specific. Rather, I see more drawbacks as the proposed method requires multiple datasets with diverse task-specific annotation. Also, the modules and their connectivity are less scalable and extendable as they are not learned. Considering all the model and dataset complexities, the improvements over black-box models are mostly marginal. The main benefits we get from all these complexities are the interpretability. However, for many modules, the interpretability comes from indirect signals that are often not clear how to interpret for the question answering. On the other hand, the manually designed sub-tasks may cause error propagation in the network as these modules are not directly optimized for the final objective. Some questions and comments: I do not understand why it is necessary to have the image captioning module as it does not directly relate to the question answering. Moreover, the caption itself is generated without conditioning on the question. [A] Yang, Zichao, et al. \"Stacked attention networks for image question answering.\" CVPR 2016. == After discussion phase Based on the rebuttal and additional experiments that clarified and resolved my questions, I change my initial rating.", "rating": "6: Marginally above acceptance threshold", "reply_text": "Thanks for the feedback . We hope to convince you that PMN is a framework to learn continuously from previous knowledge , and not just a solution to VQA . 1.PMN vs. NMN - We agree that PMN is not a generalization of NMN . However , we argue that it is not a special case of NMN either . We highlight two significant differences : a ) Progression : PMN is a framework that learns to do ( visual ) reasoning by starting with simpler tasks ( object labels ) and building up to more complex tasks ( VQA ) . This is an important step towards building intelligent agents that continuously learn new tasks by using the tasks they are already good at . There is no sense of progression in NMN and everything is learned from scratch . From the experiments related to the low data regime ( Table 6 ) , we see that PMN can make efficient use of available data to learn to communicate with experts and solve the task . b ) Task Modules : Communication in PMN is at the * query-answer level * . Since module outputs are answers to other ( human-designed ) tasks , the process is easier to interpret ( more human-readable ) . On the other hand , NMN \u2019 s modules , as showcased in their paper , contained one or two conv . or linear layers and solve sub-functions such as attention or classification . We edited the paper to remove misunderstanding our wording may have caused . 2.PMN vs. Static models - In addition to the above differences to NMN , PMN has three more significant differences to static models ( [ A ] ) . a ) Dynamic choice of modules : PMN \u2019 s state and importance function choose which modules to consider . This can go even further , and using a threshold , we may not execute some modules at all ( during inference ) . Static models always go through the same steps . b ) Information propagates in a tree-like fashion : A high-level module asks for some information from a lower module , that further produces queries for its own lower modules ( see Fig.1 ) .For example , VQA calls counting which calls relationship detection . c ) Direct querying of lower modules : PMN produces explicit queries for lower tasks using the query transmitter Q ( see Fig.2 , step 3 ) . Based on the current state , it can choose to ask information about a specific query that may be helpful to answer the question . The inter-module communication and the computation graph are all learned . 3.Modules with high-level tasks , Multiple datasets - Task-specific models are the default practice in machine learning . However , to have an intelligent agent that can learn a host of tasks over time it is beneficial to have the tasks build on top of each other ( See 1 . ( a ) ) .This is similar to the human learning process where kids first learn object names and attributes , followed by increasingly harder tasks such as counting . Datasets in the community are typically focused on one specific task , and thus we are forced to use multiple datasets and annotations to progressively learn visual reasoning abilities . 4.Minor improvements over black-box models , Interpretability - We encourage the reviewer to look at our paper in a more holistic view . Our main aim is to mimic challenging real scenarios in which we want to train agents to learn many tasks , increasing in their complexity , rather than squeezing numbers for one particular dataset . The VQA dataset has a strong bias that is exploited by black-box models [ B ] . This is one of the reasons why PMN performs much better than the other models in the low data regime ( Table 6 ) - the gap gets smaller with more data as black-box models learn to exploit dataset bias . The paper showcases how to learn tasks by progression and modularity . We hope this is interesting to readers beyond just the numbers . The fact that the performance also improves is a nice bonus . With respect to interpretability , the query-answer communication within PMN is more human-readable than other models ( See 1 . ( b ) ) .For example , as shown in Fig.2 , it produces queries for the relationship module ( bird , \u2018 on top of \u2019 ) and the relationship module returns the box corresponding to 'bench ' . Other examples such as Fig.3 , App.C & D , and the human evaluation concretely support the fact that generated outputs are much more interpretable than standard attention maps . 5.Error propagation - PMN combines information from the lower modules through importance scores . For a given set of questions , if a module produces erroneous outputs , PMN can learn to ignore such outputs and rely on other modules or it \u2019 s own residual . 6.Captioning for VQA - In captioning , one describes the most salient aspects of the picture . For example , a caption \u201c a married couple walking on the beach \u201d , provides answers to several questions ( 'are they married ? ' , 'where are they ? ' , etc ) .If the actual question relates to these , then the VQA module can simply leverage the information . In response to R2 , we evaluated how well VQA can leverage ground-truth captions and see a large 2.0 % improvement . [ B ] Agrawal , et al.Overcoming Priors for VQA . 2018"}, "1": {"review_id": "B1fpDsAqt7-1", "review_text": "[Summary] This paper presents a multi-task learning approach for VQA that represent a solver for each task as a neural module that calls existing modules in a program manner. The authors manually design the task hierarchy and propose a progressive module network to recursive calls the lower modules and gather the information by soft-attention. The final prediction uses all the states and question to infer the final answers. The authors verify the effectiveness of the proposed method on the performance of different tasks and modules. Experiment on VQA shows the proposed model benefits from utilizing different modules. The authors also qualitatively show the model's reasoning process and human study on judging answering quality. [Strength] 1. The proposed method is novel and explores to use the existing modules as a black box for visual question answering. This is different from most existing work. 2: By examing different modules, the proposed method is more interpretable compare to canonical methods. 3: The experiment results are good, especially for the counting problem. [Weakness] 1. The title of the paper is \"visual reasoning by progressive module networks.\" The title may be a little overstated since the major task is focused on visual question answering (VQA). 2. Annotation is not clear in this paper. For example, on page 3, Query transmitter and receiver, \"the output o_k = M_k(q_k) received from M_k is modified using receiver function as v_k = R_{k->n}(s^t, o_k). \" There are multiple new variables in this paragraph, without specifying the dimension and meaning for each attribute, it's really hard to understand. On page 4, State update function, what is the meaning of variable \"Epsilon\" in the equation? From the supplementary, it seems Epsilon means the environment? 3. On the object counting task, the query transmitter needs to produce a query for a relationship module. The authors mentioned that this is softly calculated by softmax on the importance score. Since q_rel require one hot vector as input, how to sample the q_rel given the importance score and how backprob the gradient in this case? 4. The cider score of image captioning is 109 compared to the baseline 108. The explanation is the COCO dataset has a fixed set of 80 object categories and does not benefit from training the diverse data. Since the input visual feature is the same, the only difference is the proposed model has additional label embedding as input. My assumption is the visual feature already contains the label information for image captioning. 5. On relational detection task, is there a way to compare with the STOA method on some specific data split? This will leads to much more convincing results. 6. Similar as above question, on the object counting task, is there a way to compare with previous counting methods? 7. In Table 4, the accuracy of number on Zhang et.al is 49.39, which is higher than other methods, while on test-dev, the accuracy is 51.62, which is lower than others. Is the number right? ", "rating": "6: Marginally above acceptance threshold", "reply_text": "We thank the reviewer for the comments and feedback . We will certainly clarify them in the final paper . 1.Title of the paper - We agree that the main highest-level task that we show is VQA , even though our method is more general . Our title aimed to convey that we showcase PMN on a host of increasingly complex visual reasoning tasks such as relationship detection , counting , and captioning , as well as VQA . Our focus is on VQA as it happens to be one of the most complex visual reasoning tasks that can leverage each of the ( relatively ) simpler tasks . 2.Description of variables - Thanks for the feedback . Epsilon means the environment , some of the definitions are written in Section 3 , but we agree that it can be somewhat challenging to interpret as there are many variables . We edited the text to address variables more gently and to explain the arrow sign . 3.Query for the relationship module - The relationship module is fed an N-dimensional ( corresponding to N image regions ) one-hot vector as input during training . When it is called by other task modules ( such as counting ) , an N-dimensional probability vector is computed using softmax on image regions ( see A.4 , point 3 ) and not using the importance scores . This acts as a soft version of the one-hot sampled vector so that we can backpropagate gradients . 4.CIDEr score of captioning - That may be true to some extent . However , we think that explicit label information might still be useful since the visual features ( environment ) are from Faster RCNN and contain diverse information such as edges , background , color , and size . 5 and 6.Comparison with SOTA models for counting and relationship detection - To the best of our knowledge , Zhang et al . ( 2018 ) is the SOTA method on counting in the context of visual question answering . Our counting module leverages that but achieves higher performance on the number questions - 54.39 % with ensembling and 52.12 % without vs. 51.62 % of Zhang et al . ( 2018 ) .Note that 51.62 % of Zhang et al . ( 2018 ) is from a single highly regularized model that provides small gains from ensembling . This shows that additional modules help . Kim et al . ( 2018 ) which is concurrent to our work shows similar performance . For the relationship detection task , other works such as Lu et al . ( 2016 ) unfortunately have a different setup which makes direct comparison difficult . 7.Table 4 , accuracies are from Zhang et al.2018 - Yes , the numbers are from their paper . One possible explanation for this could be their use of high regularization for a single model instead of ensembling . Thus , the performance improvement from training on the train set ( evaluating on validation ) to training on train+val ( evaluating on test-dev ) is smaller . ( Zhang et al.2018 ) Learning to Count Objects in Natural Images for Visual Question Answering ( Kim et al.2018 ) Bilinear Attention Networks ( Lu et al.2016 ) Visual Relationship Detection with Language Priors"}, "2": {"review_id": "B1fpDsAqt7-2", "review_text": "The paper proposes to learn task-level modules progressively to perform the task of VQA. Such task-level modules include object/attribute prediction, image captioning, relationship detection, object counting, and finally VQA model. The benefit of using modules for reasoning allows one to visualize the reasoning process more easily to understand the model better. The results are mainly shown on VQA 2.0 set, with a good amount of analysis. - I think overall this is a good paper, with clear organization, detailed description of the approach, solid analysis of the approach and cool visualization. I especially appreciate that analysis is done taking into consideration of extra computation cost of the large model; the extra data used for visual relationship detection. I do not have major comments about the paper itself, although I did not check the technical details super carefully. - One thing I am confused about is the residual model, which seems quite important for the pipeline but I cannot find details describing it and much analysis on this component. - I am in general curious to see if it will be beneficial to fine-tune the modules themselves can further improve performance. It maybe hard to do it entirely end-to-end, but maybe it is fine to fine-tune just a few top layers (like what Jiang et al did)? - One great benefit of having a module-based model is feed in the *ground truth* output for some of the modules. For example, what benefit we can get if we have perfect object detection? Where can we get if we have perfect relationships? This can help us not only better understand the models, but also the dataset (VQA) and the task in general. ", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer for the comments and feedback . We will also include the suggested experiment that shows the plug-and-play nature of PMN . 1.Residual modules - Residual modules are small neural networks ( e.g. , an MLP for Mvqa , Sec.3.4 , ( 4 ) ) that a task module may use when other lower level modules are incapable of providing a solution to a given query . For example , consider the question \u201c is this person going to be happy ? \u201d on an image of a person opening a present . Lower level modules of Mvqa may not be sufficient to solve the question . Therefore , Mvqa would make use of its residual module , which would essentially learn to \u201c pick up \u201d all queries that lower level modules can not answer . 2.Effect of fine-tuning - While it might be beneficial to fine-tune the modules for a specific parent task we want each module to be an expert for their own task as it facilitates a plug-and-play architecture . Fine-tuning may push the modules towards blindly improving parent module \u2019 s performance but ( i ) badly affect interpretability of inputs and outputs ; and ( ii ) may also reduce the lower module \u2019 s performance on its own task . Most importantly , it would not scale with the number of tasks , as for each task the agent would need to keep several fine-tuned modules of the lower tasks in memory . 3.Feeding in the ground-truth - Thanks for this great suggestion . We performed an experiment where we evaluate the benefits that the VQA model may achieve by using ground-truth captions instead of captions generated by the caption module . Our preliminary experiments show a gain of about 2.0 % which is a relatively high gain for VQA . This points to important properties of the PMN allowing human-in-the-loop type of continual learning , where a human teacher can pinpoint flaws in the reasoning process and potentially help the model to fix them ."}}