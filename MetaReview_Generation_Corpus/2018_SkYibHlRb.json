{"year": "2018", "forum": "SkYibHlRb", "title": "SQLNet: Generating Structured Queries From Natural Language Without Reinforcement Learning", "decision": "Reject", "meta_review": "The pros and cons of the paper cited by the reviewers can be summarized as follows:\n\nPros:\n- good problem, NL2SQL is an important task given how dominant SQL is\n- incorporating a grammar (\"sketch\") is a sensible improvement.\n\nCons:\n- The dataset used makes very strong simplification assumptions (that every token is an SQL keyword or appears in the NL)\n- The use of a grammar in the context of semantic parsing is not novel, and no empirical comparison is made against other reasonable recent baselines that do so (e.g. Rabinovich et al. 2017).\n\nOverall, the paper seems to do some engineering for the task of generating SQL, but without an empirical comparison to other general-purpose architectures that incorporate grammars in a similar way, the results seem incomplete, and thus I cannot recommend that the paper be accepted at this time.", "reviews": [{"review_id": "SkYibHlRb-0", "review_text": "This submission proposes a new seq2sel solution by adopting two new techniques, a sequence-to-set model and column attention mechanism. They show performance improve over existing studies on WikiSQL dataset. While the paper is written clearly, the contributions of the work heavily depends on the WikiSQL dataset. It is not sure if the approach is generally applicable to other sequence-to-sql workloads. Detailed comments are listed below: 1. WikiSQL dataset contains only a small class of SQL queries, with aggregation over single table and various filtering conditions. It does not involve any complex operator in relational database system, e.g., join and groupby. Due to its simple structure, the problem of sequence-to-sql translation over WikiSQL is actually simplified as a parameter selection problem for a fixed template. This greatly limits the generalization of approaches only applicable to WikiSQL. The authors are encouraged to explore other datasets available in the literature. 2. The \"order-matters\" motivation is not very convincing. It is straightforward to employ a global ordering approach to rank the columns and filtering conditions based on certain rules, e.g., alphabetical order. That could ensure the orders in the SQL results are always consistent. 3. The experiments do not fully verify how the approaches bring performance improvements. In the current version, the authors only report superficial accuracy results on final outcomes, without any deep investigation into why and how their approach works. For instance, they could verify how much accuracy improvement is due to the insensitivity to order in filtering expressions. 4. They do not compare against state-of-the-art solution on column and expression selection. While their attention mechanism over the columns could bring performance improvement, they should have included experiments over existing solutions designed for similar purpose. In (Yin, et al., IJCAI 2016), for example, representations over the columns are learned to generate better column selection. As a conclusion, I find the submission contains certain interesting ideas but lacks serious research investigations. The quality of the paper could be much enhanced, if the authors deepen their studies on this direction.", "rating": "4: Ok but not good enough - rejection", "reply_text": "We thank the reviewers for the valuable comments . We would like to clarify some clear misunderstandings and highlight the differences in our revisions . We agree with the reviewer that this work focus on the WikiSQL dataset . This is because this is the only largest scale dataset that is close to a practical application scenario to the best of our knowledge . In our revision , we cite one recent case study on 8.1 million real-world SQL queries written by uber data analysts ( Johnson 2017 ) . They show that almost 40 % of all these queries ( 1 ) involve only table ; and ( 2 ) each WHERE constraint involves only one column . They do not contain join at all . This is exactly the same as the queries proposed in WikiSQL . On the other hand , this problem is not trivial , since we can see even our new state-of-the-art \u2019 s performance is less than 70 % . By showing these two points , we believe we are dealing with a meaningful problem which is not trivial to tackle . To all other datasets , such as atis-3 mentioned by Reviewer A or the dataset used in ( Yin , et al. , IJCAI 2016 ) , they suffer one or more problems discussed in Section 2 which render them not practical , and thus not an ideal target of our study . We include one more section in our evaluation to document the order-matters phenomenon . In particular , we want to emphasize that WikiSQL is already employing a global ordering , but the columns may appear in the natural language statement in an arbitrary order . For example , we include the following example in our revision : NL : What are the seasons when twente came in third place and ajax was the winner ? SQL : SELECT season WHERE winner = ajax AND third place = twente We can observe that the statement \u201c twente came in third place \u201d and \u201c ajax was the winner \u201d appear in the reverse order of the global order of the two columns \u201c winner \u201d and \u201c third place \u201d . This is the `` order-matters \u201d issue we discuss . However , this issue can not be solved by changing the global order of the two columns , since the human users should also be allowed to state : \u201c What are the seasons when ajax was the winner and twente came in third place ? \u201d No matter what global order is used , one of these two statements will cause the `` order-matters \u201d issue . As far as we can see , the only way to mitigate this issue is to restrict human users to state their goals following the global order . Again , doing so will render the dataset artificial and not practical . We are very confused about the reviewer \u2019 s comment \u201c The experiments do not fully verify how the approaches bring performance improvements \u201d . In fact , the entire Section 4.3 is devoted to an ablation study to show the improvements brought by each component . In particular , the SQLNet ( seq2set ) shows the accuracy improvement due to the insensitivity to order . In our revision , we add Sec 4.4 to provide one more section to even further understand the effectiveness due to \u201c order-matters \u201d issue . Seq2SQL is the state-of-the-art on the WikiSQL dataset , and we have compared against it . Yin et al 2016 is not suitable for the WikiSQL task since their approach needs to take the data in the table as a part of the input . We have argued that this is not a scalable approach and may also have privacy issue . We have discussed this in Section 2 . We hope the reviewer can clarify some of the earlier comments with respect to our clarification . We are also welcome more comments ."}, {"review_id": "SkYibHlRb-1", "review_text": "The authors present a neural architecture for the WikiSQL task. The approach can be largely seen as graphical model tailored towards the constrained definition of SQL queries in WikiSQL. The model makes strong independence-assumptions, and only includes interactions between structures where necessary, which reduces the model complexity while alleviating the \"order matters\" problem. An attention mechanism over the columns is used to model the interaction between columns and the op or value in a soft differentiable manner. The results show impressive gains over the baseline, despite using a much simpler model. I appreciated the breakdown of accuracy over the various subtasks, which provides insights into where the challenges lie.", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer \u2019 s comment . We have updated the paper to address some comments raised in all reviews . We have posted a separate comment for a highlight overview of revision , and updated the paper . Please take a look and see if there are any comments that we should address further . More feedbacks are welcome !"}, {"review_id": "SkYibHlRb-2", "review_text": "This paper proposes a neural network-based approach to converting natural language questions to SQL queries. The idea is to use a small grammar to facilitate the process, together making some independence assumptions. It is evaluated on a recently introduced dataset for natural language to SQL. Pros: - good problem, NL2SQL is an important task given how dominant SQL is - incorporating a grammar (\"sketch\") is a sensible improvement. Cons: - The dataset used makes very strong simplification assumptions. Not problem per se, but it is not the most challenging SQL dataset. The ATIS corpus is NL2SQL and much more challenging and realistic: Deborah A. Dahl, Madeleine Bates, Michael Brown, William Fisher, Kate Hunicke-Smith, David Pallett, Christine Pao, Alexander Rudnicky, and Elizabeth Shriberg. 1994. Expanding the scope of the ATIS task: the ATIS-3 corpus. In Proceedings of the workshop on Human Language Technology (HLT '94). Association for Computational Linguistics, Stroudsburg, PA, USA, 43-48. DOI: https://doi.org/10.3115/1075812.1075823 - In particular, the assumption that every token in the SQL statement is either an SQL keyword or appears in the natural language statement is rather atypical and unrealistic. - The use of a grammar in the context of semantic parsing is not novel; see this tutorial for many pointers: http://yoavartzi.com/tutorial/ - As far as I can tell, the set prediction is essentially predicted each element independently, without taking into account any dependencies. Nothing wrong, but also nothing novel, that is what most semantic parsing/semantic role labeling baseline approaches do. The lack of ordering among the edges, doesn't mean they are independent. - Given the rather constrained type of questions and SQL statements, it would make sense to compare it against approaches for question answering over knowledge-bases: https://github.com/scottyih/Slides/blob/master/QA%20Tutorial.pdf While SQL can express much more complex queries, the ones supported by the grammar here are not very different. - Pasupat and Liang (2015) also split the data to make sure different tables appear only in training, dev, test and they developed their dataset using crowd sourcing. - The comparison against Dong and Lapata (2016) is not fair because their model is agnostic and thus applicable to 4 datasets while the one presented here is tailored to the dataset due the grammar/sketch used. Also, suggesting that previous methods might not generalize well sounds odd given that the method proposed seems to use much larger datasets. - Not sure I agree that mixing the same tables across training/dev/test is more realistic. If anything, it assumes more training data and manual annotation every time a new table is added.", "rating": "5: Marginally below acceptance threshold", "reply_text": "We appreciate reviewers \u2019 valuable comments , and we have improved our paper to address some of the concerns . We find that most comments on the novelty are to some points that we do not claim as our contribution ( e.g. , the WikiSQL task itself is not our contribution at all ) . We clarify some of such confusions below , and hope the reviewers can provide more feedback to help us to improve our paper . First , the reviewer mentioned ATIS-3 . We agree with the reviewer that atis-3 is much more challenging than WikiSQL . But we want to emphasize that we choose the problem not simply based on its difficulty , but also based on its practical impact . In our revision , we cite one recent case study on 8.1 million real-world SQL queries written by uber data analysts ( Johnson 2017 ) . They show that almost 40 % of all these queries ( 1 ) involve only one table ; and ( 2 ) each WHERE constraint involves only one column . This is exactly the same as the queries proposed in WikiSQL . On the other hand , this problem is not trivial , since we can see even our new state-of-the-art \u2019 s performance is less than 70 % . By showing these two points , although we are not solving a challenging problem as 'NP vs P ' , we believe we are dealing with a meaningful problem which is not trivial to tackle . On the other hand , although atis-3 is more challenging , we observe that its dataset is small by the deep neural network standard . This is one additional reason why we prefer WikiSQL . The reviewer mentioned : \u201c In particular , the assumption that every token in the SQL statement is either an SQL keyword or appears in the natural language statement is rather atypical and unrealistic. \u201d We want to emphasize that this is NOT true . We only assume the value in the query must appear in the description to make the problem amenable , but we do not assume the column names appear in the description . For the constraints on the values , we agree that further efforts need to devote to making a better dataset . But we do not see the problem is overly simplified as discussed above . Next , the reviewer mentioned : \u201c The use of a grammar in the context of semantic parsing is not novel \u201d . We agree with the reviewers , and we also didn \u2019 t claim using a grammar is our contribution . At the end of the introduction , we highlight the three contributions of this work : ( 1 ) seq2set ; ( 2 ) column attention ; ( 3 ) achieving the state-of-the-art on WikiSQL . We do not follow very clearly about the comments \u201c the set prediction is essentially predicted each element independently , without taking into account any dependencies \u201d . Clearly , predicting the value in one constraint in the WHERE clause depends on the column selected in a previous step . Also , it is mentioned that \u201c nothing novel \u201d and \u201c this is most \u2026 baselines do \u201d . We would highly appreciate it if the reviewer could provide some references . To the best of our knowledge , some typical baseline approaches such as Seq2tree has been demonstrated ineffective on this Wikisql dataset in Zhong et al.2017.The reviewer mentioned QA tasks . First , since QA has been studied over decades and many QA tasks have been proposed ( and mentioned in the slides ) , we would appreciate it if the reviewer can point out the particular one that is relevant . Second , in our understanding , most existing works on KB-based QA will take the entire KB as an input to answer a question . We have argued in our paper why we do not prefer such a problem : the KB can be too huge or contain privacy-sensitive information , and thus generating the query without touching the data itself is an important factor for practical usages . Again , WikiSQL task is more suitable to such a requirement than previously proposed tasks involving data itself . For the overnight dataset ( Pasupat and Liang 2015 ) , it is not true that the schemas from train/dev/test are non-overlapping . We quote the statement from ( Pasupat and Liang 2015 ) : \u201c For each domain , we held out a random 20 % of the examples as the test set , and performed development on the remaining 80 % , further splitting it to a training and development set ( 80 % /20 % ) . We created a database for each domain by randomly generating facts using entities and properties in the domain ( with type-checking ) . \u201d Here , each domain is one schema . Also , the novelty of WikiSQL over Overnight is not the problem that we want to address in our paper . We are not comparing against Seq2tree ( Dong et al 2016 ) , which was originally compared in Zhong et al 2017 . We only compare to the Seq2SQL which is the state-of-the-art on the WikiSQL dataset . Again , as we discussed above , our work is focusing on the WikiSQL dataset itself , since we believe that is an important , though somehow narrow , task . Johnson et al , Practical differential privacy for SQL queries using elastic sensitivity . to appear in VLDB 2017 ."}], "0": {"review_id": "SkYibHlRb-0", "review_text": "This submission proposes a new seq2sel solution by adopting two new techniques, a sequence-to-set model and column attention mechanism. They show performance improve over existing studies on WikiSQL dataset. While the paper is written clearly, the contributions of the work heavily depends on the WikiSQL dataset. It is not sure if the approach is generally applicable to other sequence-to-sql workloads. Detailed comments are listed below: 1. WikiSQL dataset contains only a small class of SQL queries, with aggregation over single table and various filtering conditions. It does not involve any complex operator in relational database system, e.g., join and groupby. Due to its simple structure, the problem of sequence-to-sql translation over WikiSQL is actually simplified as a parameter selection problem for a fixed template. This greatly limits the generalization of approaches only applicable to WikiSQL. The authors are encouraged to explore other datasets available in the literature. 2. The \"order-matters\" motivation is not very convincing. It is straightforward to employ a global ordering approach to rank the columns and filtering conditions based on certain rules, e.g., alphabetical order. That could ensure the orders in the SQL results are always consistent. 3. The experiments do not fully verify how the approaches bring performance improvements. In the current version, the authors only report superficial accuracy results on final outcomes, without any deep investigation into why and how their approach works. For instance, they could verify how much accuracy improvement is due to the insensitivity to order in filtering expressions. 4. They do not compare against state-of-the-art solution on column and expression selection. While their attention mechanism over the columns could bring performance improvement, they should have included experiments over existing solutions designed for similar purpose. In (Yin, et al., IJCAI 2016), for example, representations over the columns are learned to generate better column selection. As a conclusion, I find the submission contains certain interesting ideas but lacks serious research investigations. The quality of the paper could be much enhanced, if the authors deepen their studies on this direction.", "rating": "4: Ok but not good enough - rejection", "reply_text": "We thank the reviewers for the valuable comments . We would like to clarify some clear misunderstandings and highlight the differences in our revisions . We agree with the reviewer that this work focus on the WikiSQL dataset . This is because this is the only largest scale dataset that is close to a practical application scenario to the best of our knowledge . In our revision , we cite one recent case study on 8.1 million real-world SQL queries written by uber data analysts ( Johnson 2017 ) . They show that almost 40 % of all these queries ( 1 ) involve only table ; and ( 2 ) each WHERE constraint involves only one column . They do not contain join at all . This is exactly the same as the queries proposed in WikiSQL . On the other hand , this problem is not trivial , since we can see even our new state-of-the-art \u2019 s performance is less than 70 % . By showing these two points , we believe we are dealing with a meaningful problem which is not trivial to tackle . To all other datasets , such as atis-3 mentioned by Reviewer A or the dataset used in ( Yin , et al. , IJCAI 2016 ) , they suffer one or more problems discussed in Section 2 which render them not practical , and thus not an ideal target of our study . We include one more section in our evaluation to document the order-matters phenomenon . In particular , we want to emphasize that WikiSQL is already employing a global ordering , but the columns may appear in the natural language statement in an arbitrary order . For example , we include the following example in our revision : NL : What are the seasons when twente came in third place and ajax was the winner ? SQL : SELECT season WHERE winner = ajax AND third place = twente We can observe that the statement \u201c twente came in third place \u201d and \u201c ajax was the winner \u201d appear in the reverse order of the global order of the two columns \u201c winner \u201d and \u201c third place \u201d . This is the `` order-matters \u201d issue we discuss . However , this issue can not be solved by changing the global order of the two columns , since the human users should also be allowed to state : \u201c What are the seasons when ajax was the winner and twente came in third place ? \u201d No matter what global order is used , one of these two statements will cause the `` order-matters \u201d issue . As far as we can see , the only way to mitigate this issue is to restrict human users to state their goals following the global order . Again , doing so will render the dataset artificial and not practical . We are very confused about the reviewer \u2019 s comment \u201c The experiments do not fully verify how the approaches bring performance improvements \u201d . In fact , the entire Section 4.3 is devoted to an ablation study to show the improvements brought by each component . In particular , the SQLNet ( seq2set ) shows the accuracy improvement due to the insensitivity to order . In our revision , we add Sec 4.4 to provide one more section to even further understand the effectiveness due to \u201c order-matters \u201d issue . Seq2SQL is the state-of-the-art on the WikiSQL dataset , and we have compared against it . Yin et al 2016 is not suitable for the WikiSQL task since their approach needs to take the data in the table as a part of the input . We have argued that this is not a scalable approach and may also have privacy issue . We have discussed this in Section 2 . We hope the reviewer can clarify some of the earlier comments with respect to our clarification . We are also welcome more comments ."}, "1": {"review_id": "SkYibHlRb-1", "review_text": "The authors present a neural architecture for the WikiSQL task. The approach can be largely seen as graphical model tailored towards the constrained definition of SQL queries in WikiSQL. The model makes strong independence-assumptions, and only includes interactions between structures where necessary, which reduces the model complexity while alleviating the \"order matters\" problem. An attention mechanism over the columns is used to model the interaction between columns and the op or value in a soft differentiable manner. The results show impressive gains over the baseline, despite using a much simpler model. I appreciated the breakdown of accuracy over the various subtasks, which provides insights into where the challenges lie.", "rating": "7: Good paper, accept", "reply_text": "We thank the reviewer \u2019 s comment . We have updated the paper to address some comments raised in all reviews . We have posted a separate comment for a highlight overview of revision , and updated the paper . Please take a look and see if there are any comments that we should address further . More feedbacks are welcome !"}, "2": {"review_id": "SkYibHlRb-2", "review_text": "This paper proposes a neural network-based approach to converting natural language questions to SQL queries. The idea is to use a small grammar to facilitate the process, together making some independence assumptions. It is evaluated on a recently introduced dataset for natural language to SQL. Pros: - good problem, NL2SQL is an important task given how dominant SQL is - incorporating a grammar (\"sketch\") is a sensible improvement. Cons: - The dataset used makes very strong simplification assumptions. Not problem per se, but it is not the most challenging SQL dataset. The ATIS corpus is NL2SQL and much more challenging and realistic: Deborah A. Dahl, Madeleine Bates, Michael Brown, William Fisher, Kate Hunicke-Smith, David Pallett, Christine Pao, Alexander Rudnicky, and Elizabeth Shriberg. 1994. Expanding the scope of the ATIS task: the ATIS-3 corpus. In Proceedings of the workshop on Human Language Technology (HLT '94). Association for Computational Linguistics, Stroudsburg, PA, USA, 43-48. DOI: https://doi.org/10.3115/1075812.1075823 - In particular, the assumption that every token in the SQL statement is either an SQL keyword or appears in the natural language statement is rather atypical and unrealistic. - The use of a grammar in the context of semantic parsing is not novel; see this tutorial for many pointers: http://yoavartzi.com/tutorial/ - As far as I can tell, the set prediction is essentially predicted each element independently, without taking into account any dependencies. Nothing wrong, but also nothing novel, that is what most semantic parsing/semantic role labeling baseline approaches do. The lack of ordering among the edges, doesn't mean they are independent. - Given the rather constrained type of questions and SQL statements, it would make sense to compare it against approaches for question answering over knowledge-bases: https://github.com/scottyih/Slides/blob/master/QA%20Tutorial.pdf While SQL can express much more complex queries, the ones supported by the grammar here are not very different. - Pasupat and Liang (2015) also split the data to make sure different tables appear only in training, dev, test and they developed their dataset using crowd sourcing. - The comparison against Dong and Lapata (2016) is not fair because their model is agnostic and thus applicable to 4 datasets while the one presented here is tailored to the dataset due the grammar/sketch used. Also, suggesting that previous methods might not generalize well sounds odd given that the method proposed seems to use much larger datasets. - Not sure I agree that mixing the same tables across training/dev/test is more realistic. If anything, it assumes more training data and manual annotation every time a new table is added.", "rating": "5: Marginally below acceptance threshold", "reply_text": "We appreciate reviewers \u2019 valuable comments , and we have improved our paper to address some of the concerns . We find that most comments on the novelty are to some points that we do not claim as our contribution ( e.g. , the WikiSQL task itself is not our contribution at all ) . We clarify some of such confusions below , and hope the reviewers can provide more feedback to help us to improve our paper . First , the reviewer mentioned ATIS-3 . We agree with the reviewer that atis-3 is much more challenging than WikiSQL . But we want to emphasize that we choose the problem not simply based on its difficulty , but also based on its practical impact . In our revision , we cite one recent case study on 8.1 million real-world SQL queries written by uber data analysts ( Johnson 2017 ) . They show that almost 40 % of all these queries ( 1 ) involve only one table ; and ( 2 ) each WHERE constraint involves only one column . This is exactly the same as the queries proposed in WikiSQL . On the other hand , this problem is not trivial , since we can see even our new state-of-the-art \u2019 s performance is less than 70 % . By showing these two points , although we are not solving a challenging problem as 'NP vs P ' , we believe we are dealing with a meaningful problem which is not trivial to tackle . On the other hand , although atis-3 is more challenging , we observe that its dataset is small by the deep neural network standard . This is one additional reason why we prefer WikiSQL . The reviewer mentioned : \u201c In particular , the assumption that every token in the SQL statement is either an SQL keyword or appears in the natural language statement is rather atypical and unrealistic. \u201d We want to emphasize that this is NOT true . We only assume the value in the query must appear in the description to make the problem amenable , but we do not assume the column names appear in the description . For the constraints on the values , we agree that further efforts need to devote to making a better dataset . But we do not see the problem is overly simplified as discussed above . Next , the reviewer mentioned : \u201c The use of a grammar in the context of semantic parsing is not novel \u201d . We agree with the reviewers , and we also didn \u2019 t claim using a grammar is our contribution . At the end of the introduction , we highlight the three contributions of this work : ( 1 ) seq2set ; ( 2 ) column attention ; ( 3 ) achieving the state-of-the-art on WikiSQL . We do not follow very clearly about the comments \u201c the set prediction is essentially predicted each element independently , without taking into account any dependencies \u201d . Clearly , predicting the value in one constraint in the WHERE clause depends on the column selected in a previous step . Also , it is mentioned that \u201c nothing novel \u201d and \u201c this is most \u2026 baselines do \u201d . We would highly appreciate it if the reviewer could provide some references . To the best of our knowledge , some typical baseline approaches such as Seq2tree has been demonstrated ineffective on this Wikisql dataset in Zhong et al.2017.The reviewer mentioned QA tasks . First , since QA has been studied over decades and many QA tasks have been proposed ( and mentioned in the slides ) , we would appreciate it if the reviewer can point out the particular one that is relevant . Second , in our understanding , most existing works on KB-based QA will take the entire KB as an input to answer a question . We have argued in our paper why we do not prefer such a problem : the KB can be too huge or contain privacy-sensitive information , and thus generating the query without touching the data itself is an important factor for practical usages . Again , WikiSQL task is more suitable to such a requirement than previously proposed tasks involving data itself . For the overnight dataset ( Pasupat and Liang 2015 ) , it is not true that the schemas from train/dev/test are non-overlapping . We quote the statement from ( Pasupat and Liang 2015 ) : \u201c For each domain , we held out a random 20 % of the examples as the test set , and performed development on the remaining 80 % , further splitting it to a training and development set ( 80 % /20 % ) . We created a database for each domain by randomly generating facts using entities and properties in the domain ( with type-checking ) . \u201d Here , each domain is one schema . Also , the novelty of WikiSQL over Overnight is not the problem that we want to address in our paper . We are not comparing against Seq2tree ( Dong et al 2016 ) , which was originally compared in Zhong et al 2017 . We only compare to the Seq2SQL which is the state-of-the-art on the WikiSQL dataset . Again , as we discussed above , our work is focusing on the WikiSQL dataset itself , since we believe that is an important , though somehow narrow , task . Johnson et al , Practical differential privacy for SQL queries using elastic sensitivity . to appear in VLDB 2017 ."}}