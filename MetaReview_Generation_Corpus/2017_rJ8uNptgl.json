{"year": "2017", "forum": "rJ8uNptgl", "title": "Towards the Limit of Network Quantization", "decision": "Accept (Poster)", "meta_review": "The paper proposes using quantization schemes to compress the weights of a neural network. The paper carries out a methodical study of first deriving the objective function for optimizing the quantization, and then uses various quantization schemes. Experiments show competitive performance in terms of compression and accuracy tradeoff.\n \n I am happy to go with the reviewers' recommendations to accept the paper.\n \n A minor comment:\n It is important to mention other frameworks that compress neural networks, e.g. \n https://arxiv.org/abs/1509.06569\n Although the weights are not quantized above, the number of parameters is reduced.\n Similarly there are other works looking into network compression. It will be good to mention them.", "reviews": [{"review_id": "rJ8uNptgl-0", "review_text": "This paper proposes a network quantization method for compressing the parameters of neural networks, therefore, compressing the amount of storage needed for the parameters. The authors assume that the network is already pruned and aim for compressing the non-pruned parameters. The problem of network compression is a well-motivated problem and of interest to the ICLR community. The main drawback of the paper is its novelty. The paper is heavily built on the results of Han 2015 and only marginally extends Han 2015 to overcome its drawbacks. It should be noted that the proposed method in this paper has not been proposed before. The paper is well-structured and easy to follow. Although it heavily builds on Han 2015, it is still much longer than Han 2015. I believe that there is still some redundancy in the paper. The experiments section starts on Page 12 whereas for Han 2015 the experiments start on page 5. Therefore, I believe much of the introductory text is redundant and can be efficiently cut. Experimental results in the paper show good compression performance compared to Han 2015 while losing very little accuracy. Can the authors mention why there is no comparison with Hang 2015 on ResNet in Table 1? Some comments: 1) It is not clear whether the procedure depicted in figure 1 is the authors\u2019 contribution or has been in the literature. 2) In section 4.1 the authors approximate the hessian matrix with a diagonal matrix. Can the authors please explain how this approximation affects the final compression? Also how much does one lose by making such an approximation? minor typos (These are for the revised version of the paper): 1) Page 2, Parag 3, 3rd line from the end: fined-tuned -> fine-tuned 2) Page 2, one para to the end, last line: assigned for -> assigned to 3) Page 5, line 2, same as above 4) Page 8, Section 5, Line 3: explore -> explored", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We appreciate the reviewer for your kind review , suggestions and corrections . We are preparing a revised version of the paper while reducing the number of pages as the reviewer suggested . We will upload the revision as soon as it is ready . 1.We referred [ Han 2015 ] and compared our work to it since it had been the state-of-the-art in network compression . However , we would like to note that our work focuses more on the theoretical analysis and optimization of network quantization . In particular , we formulated the network quantization problem as an optimization problem to minimize the network performance loss given the compression ratio constraint . Hessian-weighting followed from this mathematical analysis and optimization , which is one of our contributions . We also identified that the network quantization problem can be related to the entropy-constrained scalar quantization ( ECSQ ) problem in information theory when optimal variable-length codes , e.g. , Huffman codes , are employed . Then , two solutions of ECSQ were proposed for network quantization . One of them is uniform quantization . Although uniform quantization is a straightforward method , it has not been used before with Huffman coding . We provided a theoretical understanding why uniform quantization is the best quantization scheme in this paper . We would like to emphasize that uniform quantization is not always good ; it is not efficient with fixed-length coding , which is also first shown in this paper . We also suggested some novel ideas in this paper , e.g. , ( 1 ) using second moments of gradients calculated by the Adam optimizer as an alternative of Hessian for free and ( 2 ) quantizing all layers of a network together using Hessian-weighting . 2.ResNet was not evaluated in [ Han 2015 ] and so there is no comparison with [ Han 2015 ] on ResNet in Table 1 . We note that [ Han 2015 ] evaluated layer-by-layer quantization while layer-by-layer compression rate is fine-tuned heuristically . Such layer-by-layer compression rate fine-tuning is not easy for very deep networks like ResNet . Instead , we proposed quantizing all network layers together at once and using Hessian-weighting to handle the different impact of quantization errors properly not only within layers but also across layers . We included ResNet in our experiments in order to see the gain of our methods using Hessian-weighting for very deep networks . The impact of quantization errors could vary more substantially across layers than within layers . Thus , Hessian-weighting can have more benefit for deeper networks like ResNet . Our experiment results also show more gain of our methods in ResNet . 3.The procedure in Figure 1 is a network compression pipeline proposed by [ Han 2015 ] . We will clarify this point . 4.We approximated the Hessian matrix as a diagonal matrix in order to simplify the optimization problem for network quantization . With this diagonal approximation , the network quantization problem reduces to a weighted k-means clustering problem . As the reviewer mentioned , this simplification comes with performance loss . However , we conjecture that the loss due to approximation is small . The reason is that the contributions from off-diagonal terms are not always additive . Quantization errors can be either negative or positive and therefore the summation of off-diagonal terms may cancel with each other and end up with being a small value . However , diagonal terms are all non-negative and therefore their contributions are always additive . Thus , we think that the contribution of diagonal terms is dominant and the loss due to diagonal approximation is small . We could not verify this conjecture though since solving the problem without diagonal approximation is too complex ; we even need to compute the whole Hessian matrix , which is also too costly . Best , Yoojin"}, {"review_id": "rJ8uNptgl-1", "review_text": "This paper proposes a novel neural network compression technique. The goal is to compress maximally the network specification via parameter quantisation with a minimum impact on the expected loss. It assumes pruning of the network parameters has already been performed, and only considers the quantisation of the individual scalar parameters of the network. In contrast to previous work (Han et al. 2015a, Gong et al. 2014) the proposed approach takes into account the effect of the weight quantisation on the loss function that is used to train the network, and also takes into account the effect on a variable-length binary encoding of the cluster centers used for the quantisation. Unfortunately, the submitted paper is 20 pages, rather than the 8 recommended. The length of the paper seems unjustified to me, since the first three sections (first five pages) are very generic and redundant can be largely compressed or skipped (including figures 1 and 2). Although not a strict requirement by the submission guidelines, I would suggest the authors to compress their paper to 8 pages, this will improve the readability of the paper. To take into account the impact on the network\u2019s loss the authors propose to use a second order approximation of the cost function of the loss. In the case of weights that originally constitute a local minimum of the loss, this leads to a formulation of the impact of the weight quantization on the loss in terms of a weighted k-means clustering objective, where the weights are derived from the hessian of the loss function at the original weights. The hessian can be computed efficiently using a back-propagation algorithm similar to that used to compute the gradient, as shown in cited work from the literature. The authors also propose to alternatively use a second-order moment term used by the Adam optimisation algorithm, since it can be loosely interpreted as an approximate Hessian. In section 4.5 the authors argue that with their approach it is more natural to quantise weights across all layers together, due to the hessian weighting which takes into account the variable impact across layers of quantisation errors on the network performance. The last statement in this section, however, was not clear to me: \u201cIn such deep neural networks, quantising network parameters of all layers together is more efficient since optimizing layer-by-layer clustering jointly across all layers requires exponential time complexity with respect to the number of layers.\u201d Perhaps the authors could elaborate a bit more on this point? In section 5 the authors develop methods to take into account the code length of the weight quantisation in the clustering process. The first method described by the authors (based on previous work), is uniform quantisation of the weight space, which is then further optimised by their hessian-weighted clustering procedure from section 4. For the case of nonuniform codeword lengths to encode the cluster indices, the authors develop a modification of the Hessian weighted k-means algorithm in which the code length of each cluster is also taken into account, weighted by a factor lambda. Different values of lambda give rise to different compression-accuracy trade-offs, and the authors propose to cluster weights for a variety of lambda values and then pick the most accurate solution obtained, given a certain compression budget. In section 6 the authors report a number of experimental results that were obtained with the proposed methods, and compare these results to those obtained by the layer-wise compression technique of Han et al 2015, and to the uncompressed models. For these experiments the authors used three datasets, MNIST, CIFAR10 and ImageNet, with data-set specific architectures taken from the literature. These results suggest a consistent and significant advantage of the proposed method over the work of Han et al. Comparison to the work of Gong et al 2014 is not made. The results illustrate the advantage of the hessian weighted k-means clustering criterion, and the advantages of the variable bitrate cluster encoding. In conclusion I would say that this is quite interesting work, although the technical novelty seems limited (but I\u2019m not a quantisation expert). Interestingly, the proposed techniques do not seem specific to deep conv nets, but rather generically applicable to quantisation of parameters of any model with an associated cost function for which a locally quadratic approximation can be formulated. It would be useful if the authors would discuss this point in their paper. ", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We appreciate you for your kind review and suggestions . We will prepare a revision and upload it soon . 1 ) We will try to reduce the length of the paper as your suggestion when we prepare a revision . 2 ) For layer-by-layer quantization , we need to find a proper compression rate for each layer , i.e. , we need to find a proper number of clusters and a binary code for each layer . We would like to note that the complexity of the joint optimization ( across layers ) for this can exponentially increase as the number of layers increases . It is because the total number of possible combinations for clustering and coding that we need to examine for this optimization increases exponentially as the number of layers increases . As your suggestion , we will elaborate this point more when we revise the paper . 3 ) As you pointed out , the quantization methods proposed in this paper are applicable for other models where the objective function can be approximated as a quadratic function . In this paper , we identified and derived the connection of the neural network quantization problem to this generic data compression problem ; we think this is one of our contributions in this paper . We would be glad to discuss this point more when we revise the paper . Thank you for your suggestion . Best , Yoojin"}, {"review_id": "rJ8uNptgl-2", "review_text": "The paper has two main contributions: 1) Shows that uniform quantization works well with variable length (Huffman) coding 2) Improves fixed-length quantization by proposing the Hessian-weighted k-means, as opposed to standardly used vanilla k-means. The Hessian weighting is well motivated, and it is also explained how to use an efficient approximation \"for free\" when using the Adam optimizer, which is quite neat. As opposed to vanilla k-means, one of the main benefits of this approach (apart from improved performance) is that no tuning on per-layer compression rates is required, as this is achieved for free. To conclude, I like the paper: (1) is not really novel but it doesn't seem other papers have done this before so it's nice to know it works well, and (2) is quite neat and also works well. The paper is easy to follow, results are good. My only complaint is that it's a bit too long. Minor note - I still don't understand the parts about storing \"additional bits for each binary codeword for layer indication\" when doing layer-by-layer quantization. What's the problem of just having an array of quantized weight values for each layer, i.e. q[0][:] would store all quantized weights for layer 0, q[1][:] for layer 1 etc, and for each layer you would have the codebook. So the only overhead over joint quantization is storing the codebook for each layer, which is insignificant. I don't understand the \"additional bit\" part. But anyway, this is really not a important as I don't think it affects the paper at all, just authors might want to additionally clarify this point (maybe I'm missing something obvious, but if I am then it's likely some other people will as well). ", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We thank you for your kind review and suggestion . We will prepare a revision as follows and upload it soon . 1 ) We will try to reduce the length of the paper more as your suggestion when we prepare a revision . 2 ) Thank you for pointing this out again . We will clarify the 'additional bits ' part more when we revise the paper . What we wanted to say was that for layer-by-layer quantization , it is beneficial to use separate arrays and separate lookup tables for different layers . It is because the same codeword can be used for representing different values in different layers , which enhances the compression rate . Best , Yoojin"}], "0": {"review_id": "rJ8uNptgl-0", "review_text": "This paper proposes a network quantization method for compressing the parameters of neural networks, therefore, compressing the amount of storage needed for the parameters. The authors assume that the network is already pruned and aim for compressing the non-pruned parameters. The problem of network compression is a well-motivated problem and of interest to the ICLR community. The main drawback of the paper is its novelty. The paper is heavily built on the results of Han 2015 and only marginally extends Han 2015 to overcome its drawbacks. It should be noted that the proposed method in this paper has not been proposed before. The paper is well-structured and easy to follow. Although it heavily builds on Han 2015, it is still much longer than Han 2015. I believe that there is still some redundancy in the paper. The experiments section starts on Page 12 whereas for Han 2015 the experiments start on page 5. Therefore, I believe much of the introductory text is redundant and can be efficiently cut. Experimental results in the paper show good compression performance compared to Han 2015 while losing very little accuracy. Can the authors mention why there is no comparison with Hang 2015 on ResNet in Table 1? Some comments: 1) It is not clear whether the procedure depicted in figure 1 is the authors\u2019 contribution or has been in the literature. 2) In section 4.1 the authors approximate the hessian matrix with a diagonal matrix. Can the authors please explain how this approximation affects the final compression? Also how much does one lose by making such an approximation? minor typos (These are for the revised version of the paper): 1) Page 2, Parag 3, 3rd line from the end: fined-tuned -> fine-tuned 2) Page 2, one para to the end, last line: assigned for -> assigned to 3) Page 5, line 2, same as above 4) Page 8, Section 5, Line 3: explore -> explored", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We appreciate the reviewer for your kind review , suggestions and corrections . We are preparing a revised version of the paper while reducing the number of pages as the reviewer suggested . We will upload the revision as soon as it is ready . 1.We referred [ Han 2015 ] and compared our work to it since it had been the state-of-the-art in network compression . However , we would like to note that our work focuses more on the theoretical analysis and optimization of network quantization . In particular , we formulated the network quantization problem as an optimization problem to minimize the network performance loss given the compression ratio constraint . Hessian-weighting followed from this mathematical analysis and optimization , which is one of our contributions . We also identified that the network quantization problem can be related to the entropy-constrained scalar quantization ( ECSQ ) problem in information theory when optimal variable-length codes , e.g. , Huffman codes , are employed . Then , two solutions of ECSQ were proposed for network quantization . One of them is uniform quantization . Although uniform quantization is a straightforward method , it has not been used before with Huffman coding . We provided a theoretical understanding why uniform quantization is the best quantization scheme in this paper . We would like to emphasize that uniform quantization is not always good ; it is not efficient with fixed-length coding , which is also first shown in this paper . We also suggested some novel ideas in this paper , e.g. , ( 1 ) using second moments of gradients calculated by the Adam optimizer as an alternative of Hessian for free and ( 2 ) quantizing all layers of a network together using Hessian-weighting . 2.ResNet was not evaluated in [ Han 2015 ] and so there is no comparison with [ Han 2015 ] on ResNet in Table 1 . We note that [ Han 2015 ] evaluated layer-by-layer quantization while layer-by-layer compression rate is fine-tuned heuristically . Such layer-by-layer compression rate fine-tuning is not easy for very deep networks like ResNet . Instead , we proposed quantizing all network layers together at once and using Hessian-weighting to handle the different impact of quantization errors properly not only within layers but also across layers . We included ResNet in our experiments in order to see the gain of our methods using Hessian-weighting for very deep networks . The impact of quantization errors could vary more substantially across layers than within layers . Thus , Hessian-weighting can have more benefit for deeper networks like ResNet . Our experiment results also show more gain of our methods in ResNet . 3.The procedure in Figure 1 is a network compression pipeline proposed by [ Han 2015 ] . We will clarify this point . 4.We approximated the Hessian matrix as a diagonal matrix in order to simplify the optimization problem for network quantization . With this diagonal approximation , the network quantization problem reduces to a weighted k-means clustering problem . As the reviewer mentioned , this simplification comes with performance loss . However , we conjecture that the loss due to approximation is small . The reason is that the contributions from off-diagonal terms are not always additive . Quantization errors can be either negative or positive and therefore the summation of off-diagonal terms may cancel with each other and end up with being a small value . However , diagonal terms are all non-negative and therefore their contributions are always additive . Thus , we think that the contribution of diagonal terms is dominant and the loss due to diagonal approximation is small . We could not verify this conjecture though since solving the problem without diagonal approximation is too complex ; we even need to compute the whole Hessian matrix , which is also too costly . Best , Yoojin"}, "1": {"review_id": "rJ8uNptgl-1", "review_text": "This paper proposes a novel neural network compression technique. The goal is to compress maximally the network specification via parameter quantisation with a minimum impact on the expected loss. It assumes pruning of the network parameters has already been performed, and only considers the quantisation of the individual scalar parameters of the network. In contrast to previous work (Han et al. 2015a, Gong et al. 2014) the proposed approach takes into account the effect of the weight quantisation on the loss function that is used to train the network, and also takes into account the effect on a variable-length binary encoding of the cluster centers used for the quantisation. Unfortunately, the submitted paper is 20 pages, rather than the 8 recommended. The length of the paper seems unjustified to me, since the first three sections (first five pages) are very generic and redundant can be largely compressed or skipped (including figures 1 and 2). Although not a strict requirement by the submission guidelines, I would suggest the authors to compress their paper to 8 pages, this will improve the readability of the paper. To take into account the impact on the network\u2019s loss the authors propose to use a second order approximation of the cost function of the loss. In the case of weights that originally constitute a local minimum of the loss, this leads to a formulation of the impact of the weight quantization on the loss in terms of a weighted k-means clustering objective, where the weights are derived from the hessian of the loss function at the original weights. The hessian can be computed efficiently using a back-propagation algorithm similar to that used to compute the gradient, as shown in cited work from the literature. The authors also propose to alternatively use a second-order moment term used by the Adam optimisation algorithm, since it can be loosely interpreted as an approximate Hessian. In section 4.5 the authors argue that with their approach it is more natural to quantise weights across all layers together, due to the hessian weighting which takes into account the variable impact across layers of quantisation errors on the network performance. The last statement in this section, however, was not clear to me: \u201cIn such deep neural networks, quantising network parameters of all layers together is more efficient since optimizing layer-by-layer clustering jointly across all layers requires exponential time complexity with respect to the number of layers.\u201d Perhaps the authors could elaborate a bit more on this point? In section 5 the authors develop methods to take into account the code length of the weight quantisation in the clustering process. The first method described by the authors (based on previous work), is uniform quantisation of the weight space, which is then further optimised by their hessian-weighted clustering procedure from section 4. For the case of nonuniform codeword lengths to encode the cluster indices, the authors develop a modification of the Hessian weighted k-means algorithm in which the code length of each cluster is also taken into account, weighted by a factor lambda. Different values of lambda give rise to different compression-accuracy trade-offs, and the authors propose to cluster weights for a variety of lambda values and then pick the most accurate solution obtained, given a certain compression budget. In section 6 the authors report a number of experimental results that were obtained with the proposed methods, and compare these results to those obtained by the layer-wise compression technique of Han et al 2015, and to the uncompressed models. For these experiments the authors used three datasets, MNIST, CIFAR10 and ImageNet, with data-set specific architectures taken from the literature. These results suggest a consistent and significant advantage of the proposed method over the work of Han et al. Comparison to the work of Gong et al 2014 is not made. The results illustrate the advantage of the hessian weighted k-means clustering criterion, and the advantages of the variable bitrate cluster encoding. In conclusion I would say that this is quite interesting work, although the technical novelty seems limited (but I\u2019m not a quantisation expert). Interestingly, the proposed techniques do not seem specific to deep conv nets, but rather generically applicable to quantisation of parameters of any model with an associated cost function for which a locally quadratic approximation can be formulated. It would be useful if the authors would discuss this point in their paper. ", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We appreciate you for your kind review and suggestions . We will prepare a revision and upload it soon . 1 ) We will try to reduce the length of the paper as your suggestion when we prepare a revision . 2 ) For layer-by-layer quantization , we need to find a proper compression rate for each layer , i.e. , we need to find a proper number of clusters and a binary code for each layer . We would like to note that the complexity of the joint optimization ( across layers ) for this can exponentially increase as the number of layers increases . It is because the total number of possible combinations for clustering and coding that we need to examine for this optimization increases exponentially as the number of layers increases . As your suggestion , we will elaborate this point more when we revise the paper . 3 ) As you pointed out , the quantization methods proposed in this paper are applicable for other models where the objective function can be approximated as a quadratic function . In this paper , we identified and derived the connection of the neural network quantization problem to this generic data compression problem ; we think this is one of our contributions in this paper . We would be glad to discuss this point more when we revise the paper . Thank you for your suggestion . Best , Yoojin"}, "2": {"review_id": "rJ8uNptgl-2", "review_text": "The paper has two main contributions: 1) Shows that uniform quantization works well with variable length (Huffman) coding 2) Improves fixed-length quantization by proposing the Hessian-weighted k-means, as opposed to standardly used vanilla k-means. The Hessian weighting is well motivated, and it is also explained how to use an efficient approximation \"for free\" when using the Adam optimizer, which is quite neat. As opposed to vanilla k-means, one of the main benefits of this approach (apart from improved performance) is that no tuning on per-layer compression rates is required, as this is achieved for free. To conclude, I like the paper: (1) is not really novel but it doesn't seem other papers have done this before so it's nice to know it works well, and (2) is quite neat and also works well. The paper is easy to follow, results are good. My only complaint is that it's a bit too long. Minor note - I still don't understand the parts about storing \"additional bits for each binary codeword for layer indication\" when doing layer-by-layer quantization. What's the problem of just having an array of quantized weight values for each layer, i.e. q[0][:] would store all quantized weights for layer 0, q[1][:] for layer 1 etc, and for each layer you would have the codebook. So the only overhead over joint quantization is storing the codebook for each layer, which is insignificant. I don't understand the \"additional bit\" part. But anyway, this is really not a important as I don't think it affects the paper at all, just authors might want to additionally clarify this point (maybe I'm missing something obvious, but if I am then it's likely some other people will as well). ", "rating": "7: Good paper, accept", "reply_text": "Dear Reviewer , We thank you for your kind review and suggestion . We will prepare a revision as follows and upload it soon . 1 ) We will try to reduce the length of the paper more as your suggestion when we prepare a revision . 2 ) Thank you for pointing this out again . We will clarify the 'additional bits ' part more when we revise the paper . What we wanted to say was that for layer-by-layer quantization , it is beneficial to use separate arrays and separate lookup tables for different layers . It is because the same codeword can be used for representing different values in different layers , which enhances the compression rate . Best , Yoojin"}}